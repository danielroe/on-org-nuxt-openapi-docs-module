{"doc":{"openapi":"3.0.0","info":{"title":"Syntax Highlighting","version":"1.0.0","description":"<p>You may provide little snippets of code using markdown syntax and they will be color coded based on the language you specified as shown below</p>\n<pre><code>    ```java\n      some code...\n      ...\n      ...\n    ```\n</code></pre>\n<p>Following are the supported language codes that you may use for syntax highlighting</p>\n<ul>\n<li><code>bash</code> <code>shell</code></li>\n<li><code>markup</code> <code>html</code> <code>xml</code> <code>svg</code></li>\n<li><code>json</code></li>\n<li><code>yaml</code> <code>yml</code></li>\n<li><code>go</code></li>\n<li><code>javascript</code> <code>js</code></li>\n<li><code>java</code></li>\n<li><code>python</code> <code>py</code></li>\n<li><code>csharp</code> <code>cs</code></li>\n<li><code>http</code></li>\n<li><code>css</code></li>\n</ul>\n<p><strong>No Highlight</strong></p>\n<pre><code>$ curl -X POST -is -u username:password\n  -H &quot;Content-Type: application/json&quot; https://example.com\n  -d &#x27;{\n    &quot;target&quot;: {\n      &quot;ref_type&quot;: &quot;branch&quot;,\n      &quot;type&quot;: &quot;pipeline_ref_target&quot;,\n      &quot;ref_name&quot;: &quot;master&quot;\n    }\n  }&#x27;\n</code></pre>\n<p><strong>SHELL</strong> <code>shell</code> <code>bash</code></p>\n<pre><code class=\"hljs language-bash\">$ curl -X POST -is -u username:password\n  -H <span class=\"hljs-string\">&quot;Content-Type: application/json&quot;</span> https://example.com\n  -d <span class=\"hljs-string\">&#x27;{\n    &quot;target&quot;: {\n      &quot;ref_type&quot;: &quot;branch&quot;,\n      &quot;type&quot;: &quot;pipeline_ref_target&quot;,\n      &quot;ref_name&quot;: &quot;master&quot;\n    }\n  }&#x27;</span>\n</code></pre>\n<p><strong>MARKUP</strong> <code>markup</code> <code>html</code> <code>xml</code> <code>svg</code></p>\n<pre><code class=\"hljs language-markup\">&lt;!doctype html&gt;\n\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=&quot;utf-8&quot;&gt; &lt;!-- Important: rapi-doc uses utf8 characters --&gt;\n    &lt;script type=&quot;module&quot; src=&quot;https://unpkg.com/rapidoc/dist/rapidoc-min.js&quot;&gt;&lt;/script&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;rapi-doc spec-url=&quot;https://petstore.swagger.io/v2/swagger.json&quot;&gt; &lt;/rapi-doc&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p><strong>JSON</strong> <code>json</code></p>\n<pre><code class=\"hljs language-json\"><span class=\"hljs-punctuation\">{</span>\n  <span class=\"hljs-attr\">&quot;firstName&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Mickey&quot;</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;lastName&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Mouse&quot;</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;age&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">9</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;married&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">false</span></span><span class=\"hljs-punctuation\">,</span>\n<span class=\"hljs-punctuation\">}</span>\n</code></pre>\n<p><strong>YAML</strong> <code>yaml</code> <code>yml</code></p>\n<pre><code class=\"hljs language-yaml\"><span class=\"hljs-attr\">openapi:</span> <span class=\"hljs-number\">3.0</span><span class=\"hljs-number\">.0</span>\n<span class=\"hljs-attr\">info:</span>\n  <span class=\"hljs-attr\">title:</span> <span class=\"hljs-string\">Syntax</span> <span class=\"hljs-string\">Highlighting</span>\n  <span class=\"hljs-attr\">version:</span> <span class=\"hljs-number\">1.0</span><span class=\"hljs-number\">.0</span>\n  <span class=\"hljs-attr\">description:</span> <span class=\"hljs-string\">&gt;\n    Example of\n    Syntax highlighting</span>\n</code></pre>\n<p><strong>GO</strong> <code>go</code></p>\n<pre><code class=\"hljs language-go\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">readFileAsLines</span><span class=\"hljs-params\">(path <span class=\"hljs-type\">string</span>)</span></span> ([]<span class=\"hljs-type\">string</span>, <span class=\"hljs-type\">error</span>) {\n  d, err := ioutil.ReadFile(path)\n  <span class=\"hljs-keyword\">if</span> err != <span class=\"hljs-literal\">nil</span> {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">nil</span>, err\n  }\n  s := <span class=\"hljs-type\">string</span>(d)\n  res := strings.Split(s, <span class=\"hljs-string\">&quot;\\n&quot;</span>)\n  <span class=\"hljs-keyword\">return</span> res, <span class=\"hljs-literal\">nil</span>\n}\n</code></pre>\n<p><strong>JAVA SCRIPT</strong> <code>javascript</code> <code>js</code></p>\n<pre><code class=\"hljs language-js\">  <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">add</span>(<span class=\"hljs-params\">x, y</span>) {\n    <span class=\"hljs-keyword\">const</span> answer = x + y;\n    <span class=\"hljs-keyword\">return</span> answer;\n  }\n\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">10</span>; i++){\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-number\">3</span>, i); <span class=\"hljs-comment\">// prints in console</span>\n  }\n</code></pre>\n<p><strong>JAVA</strong> <code>java</code></p>\n<pre><code class=\"hljs language-java\"><span class=\"hljs-type\">BufferedWriter</span> <span class=\"hljs-variable\">out</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-literal\">null</span>;\n<span class=\"hljs-keyword\">try</span> {\n  out = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">BufferedWriter</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">FileWriter</span>(”filename”, <span class=\"hljs-literal\">true</span>));\n  out.write(”aString”);\n} <span class=\"hljs-keyword\">catch</span> (IOException e) {\n  <span class=\"hljs-comment\">// error processing code</span>\n} <span class=\"hljs-keyword\">finally</span> {\n  <span class=\"hljs-keyword\">if</span> (out != <span class=\"hljs-literal\">null</span>) {\n    out.close();\n  }\n}\n</code></pre>\n<p><strong>PYTHON</strong> <code>python</code> <code>py</code></p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-meta\">@app.route(<span class=\"hljs-params\"><span class=\"hljs-string\">&#x27;/parse_data&#x27;</span>, methods=[<span class=\"hljs-string\">&#x27;GET&#x27;</span>, <span class=\"hljs-string\">&#x27;POST&#x27;</span>]</span>)</span>\n<span class=\"hljs-comment\"># define the function</span>\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">parse_data</span>():\n  <span class=\"hljs-keyword\">if</span> request.method == <span class=\"hljs-string\">&#x27;POST&#x27;</span>:\n    search = request.get_json()\n    <span class=\"hljs-keyword\">return</span> jsonify(search)\n  <span class=\"hljs-keyword\">return</span> render_template(<span class=\"hljs-string\">&#x27;index.html&#x27;</span>)\n</code></pre>\n<p><strong>C SHARP</strong> <code>chsarp</code> <code>cs</code></p>\n<pre><code class=\"hljs language-csharp\"><span class=\"hljs-keyword\">using</span> System.IO.Compression;\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">MyApplication</span> {\n  [<span class=\"hljs-meta\">Obsolete(<span class=\"hljs-string\">&quot;...&quot;</span>)</span>]\n  <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Program</span> : <span class=\"hljs-title\">IInterface</span> {\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-title\">List</span>&lt;<span class=\"hljs-title\">int</span>&gt; <span class=\"hljs-title\">JustDoIt</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> count</span>)</span> {\n      Console.WriteLine(<span class=\"hljs-string\">$&quot;Hello <span class=\"hljs-subst\">{Name}</span>!&quot;</span>);\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> List&lt;<span class=\"hljs-built_in\">int</span>&gt;(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">int</span>[] { <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span> })\n    }\n  }\n}\n</code></pre>\n<p><strong>HTTP</strong> <code>http</code></p>\n<pre><code class=\"hljs language-http\"><span class=\"hljs-keyword\">POST</span> <span class=\"hljs-string\">/pet</span> <span class=\"hljs-meta\">HTTP/1.1</span>\n<span class=\"hljs-attribute\">Host</span><span class=\"hljs-punctuation\">: </span>example.org\n<span class=\"hljs-attribute\">Content-Type</span><span class=\"hljs-punctuation\">: </span>application/json; charset=utf-8\n<span class=\"hljs-attribute\">Content-Length</span><span class=\"hljs-punctuation\">: </span>137\n\n<span class=\"language-json\"><span class=\"hljs-punctuation\">{</span>\n  <span class=\"hljs-attr\">&quot;status&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;ok&quot;</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;extended&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;results&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-punctuation\">{</span><span class=\"hljs-attr\">&quot;value&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;int64&quot;</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-punctuation\">{</span><span class=\"hljs-attr\">&quot;value&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">1.0e+3</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;decimal&quot;</span><span class=\"hljs-punctuation\">}</span>\n  <span class=\"hljs-punctuation\">]</span>\n<span class=\"hljs-punctuation\">}</span></span>\n</code></pre>\n"},"paths":{"/code":{"get":{"summary":"Syntax Highlighting in Markdown","description":"<p>Syntax Highlighting in <strong>OPERATION DESCRIPTION</strong></p>\n<pre><code class=\"hljs language-http\"><span class=\"hljs-keyword\">POST</span> <span class=\"hljs-string\">/pet</span> <span class=\"hljs-meta\">HTTP/1.1</span>\n<span class=\"hljs-attribute\">Host</span><span class=\"hljs-punctuation\">: </span>example.org\n<span class=\"hljs-attribute\">Content-Type</span><span class=\"hljs-punctuation\">: </span>application/json; charset=utf-8\n<span class=\"hljs-attribute\">Content-Length</span><span class=\"hljs-punctuation\">: </span>137\n\n<span class=\"language-json\"><span class=\"hljs-punctuation\">{</span>\n  <span class=\"hljs-attr\">&quot;status&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;ok&quot;</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;extended&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;results&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-punctuation\">{</span><span class=\"hljs-attr\">&quot;value&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;int64&quot;</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-punctuation\">{</span><span class=\"hljs-attr\">&quot;value&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">1.0e+3</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;decimal&quot;</span><span class=\"hljs-punctuation\">}</span>\n  <span class=\"hljs-punctuation\">]</span>\n<span class=\"hljs-punctuation\">}</span></span>\n</code></pre>\n","tags":["other"]},"post":{"summary":"Request body","requestBody":{"description":"<p>Syntax Highlighting in <strong>REQUEST BODY</strong></p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">add</span>(<span class=\"hljs-params\">x, y</span>) {\n  <span class=\"hljs-keyword\">const</span> answer = x + y;\n  <span class=\"hljs-keyword\">return</span> answer;\n}\n\n<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">10</span>; i++){\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-number\">3</span>, i); <span class=\"hljs-comment\">// prints in console</span>\n}\n</code></pre>\n","content":{"application/json":{"schema":"#/components/schemas/Price"}}},"responses":{"200":{"description":"Successful"}},"tags":["other"]}}},"components":{"schemas":{"Price":{"type":"object","properties":{"amount":{"type":"integer"},"currency":{"type":"string"}}}}},"tags":{}},"path":"docs","files":{"petstore_extended":"Petstore Extended Api","localization":"Localization","no-access":"no access","page":"Custom Page","additional-props":"additional-props","allof":"allof","arr-of-arr":"arr-of-arr","arrange-by-tags":"arrange-by-tags","array-and-object-nesting":"array-and-object-nesting","auth-test1":"auth-test1","auth":"auth","callback":"callback","circular":"circular","code-highlight":"code-highlight","collapsable":"collapsable","data-types-simple":"data-types-simple","data-types":"data-types","dynamic-form-params":"dynamic-form-params","dynamic-query-params":"dynamic-query-params","events":"events","example-with-nested-refs":"example-with-nested-refs","examples":"examples","file-upload":"file-upload","fill-example-test":"fill-example-test","large-spec":"large-spec","links":"links","markdown-headings":"markdown-headings","markdown":"markdown","mock":"mock","multi-datatypes-test":"multi-datatypes-test","multi-datatypes":"multi-datatypes","multipart-formdata":"multipart-formdata","multiple-oneof":"multiple-oneof","multiple-security-schemes":"multiple-security-schemes","no-server":"no-server","oauth-demo":"oauth-demo","oauth-o365":"oauth-o365","oauth-vendor-extension":"oauth-vendor-extension","oauth":"oauth","oneof-allof-nested":"oneof-allof-nested","oneof-combinations":"oneof-combinations","oneof-with-refs":"oneof-with-refs","oneof":"oneof","open-api-3-1-test":"open-api-3-1-test","open-api-3-1":"open-api-3-1","parameters":"parameters","petstore":"petstore","post-nobody":"post-nobody","request-body-multiple":"request-body-multiple","schema-title-and-descriptions":"schema-title-and-descriptions","schema":"schema","server-override":"server-override","server":"server","toomany-example-generation":"toomany-example-generation","webhook":"webhook","xml":"xml"},"pathsByTags":{"other":{"name":"other","description":"","isOpen":true,"items":[{"name":"/code","path":"code","type":"get","icon":null,"description":"Syntax Highlighting in Markdown"},{"name":"/code","path":"code","type":"post","icon":null,"description":"Request body"}]}},"locales":{"en":"English"},"locales_reload":false,"servers":[],"name":"Api Docs","doc_path":"docs"}