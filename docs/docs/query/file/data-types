{"doc":{"openapi":"3.0.0","info":{"description":"Contains all data types","version":"1.0.0","title":"Testing different data-types"},"paths":{"/nested-object-in-request-body":{"post":{"tags":["Test with various data types"],"summary":"Request Body accepting a JSON","requestBody":{"content":{"application/json":{"schema":"#/components/schemas/person"}}}}},"/nested-object":{"get":{"tags":["Test with various data types"],"summary":"Nested object","description":"<p>Response schema is made up of multiple nested object, For simple schema check out <a href=\"#get-/simple-object\">simple object</a></p>\n","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"type":"object","description":"<p>Description of <strong>Person</strong> object (Person must be bold)</p>\n","properties":{"age":{"description":"<p>Person&#39;s <strong>Age</strong> (age must be bold)</p>\n","type":"integer"},"fullName":{"description":"Person&#x27;s Full name","type":"object","properties":{"firstName":{"description":"_First name_ (First name should be italics)","type":"string"},"lastName":{"description":"`Last name` (last name must be monospaced)\n","type":"string"}}},"dependentIds":{"type":"array","description":"IDs of Dependents .","items":{"type":"integer"}},"dependentNames":{"type":"array","description":"<p>Full Name of <strong>Dependents</strong> (Dependents must be bold).</p>\n","items":{"type":"object","properties":{"firstNameParts":{"description":"<p>Parts of <strong>First Name</strong> (First Name must be bold)</p>\n","type":"object","properties":{"firstName":{"description":"This is a very very long description to test how will it show up on a API spec renderer tool such as RapiDoc. This lable must be big enough to wrap into next line","type":"string"},"aLongFieldForTestingHowItShowsUpInSchemaModelWhenItEncountersLongField":{"description":"Dependent Last Name","type":"string"}}},"dependentLastName":{"description":"Dependent Last Name","type":"string"}}}},"hobbies":{"type":"array","description":"array of objects","items":{"type":"object"}}}}}}}}}},"/simple-object":{"get":{"tags":["Test with various data types"],"summary":"Simple object","description":"<p>Response schema is a simple object, which contains only primitive properties. For complex schema check out <a href=\"#get-/nested-object\">nested object</a></p>\n","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"type":"object","properties":{"name":{"description":"Person Name","type":"string"},"age":{"description":"Person Age","type":"integer","minimum":1,"maximum":100}}}}}}}}},"/person":{"post":{"tags":["Test with various data types"],"summary":"Data Types with constraints","description":"Request-Parameters and Response-Schema contains various data types and constrains. Check out how is it desplayed below","parameters":[{"name":"height","in":"query","description":"height (in inches)","required":true,"example":70,"schema":{"type":"integer","format":"int32","minimum":12,"maximum":120}},{"name":"full-name","in":"query","description":"Name of a person","required":true,"schema":{"type":"string","minimum":3},"examples":{"empty":{"value":null,"summary":"No Name"},"male-name":{"value":"James","summary":"Male name","description":"<p><code>Lorem ipsum dolor sit amet</code> consectetur adipisicing elit.</p>\n<ol>\n<li>Animi alias iste</li>\n<li>minus iure</li>\n<li>assumenda quisquam</li>\n<li>qui cum id ab nesciunt</li>\n</ol>\n<p><em>Impedit voluptatum asperiores obcaecati blanditiis</em> perferendis error repudiandae odit, veniam ab culpa exercitationem eaque,</p>\n<blockquote>\n<p>repellat <strong>laboriosam sequi dolor doloribus</strong> voluptas</p>\n</blockquote>\n<p> natus hic fugiat incidunt.</p>\n<ul>\n<li>laborum odio dolore</li>\n<li>corrupti tenetur</li>\n<li>nostrum aut sunt,</li>\n</ul>\n<p>quis vel neque. Vitae maxime aut assumenda ipsum.</p>\n"},"female-name":{"value":"Ria","summary":"Female Name"},"gender-nutral-name":{"value":"Charlie","summary":"Gender Neutral Name"}}},{"name":"social-connection","in":"query","description":"facebook, linkedin, github, instagram, twitter etc","schema":{"type":"string","format":"url"}},{"name":"email","in":"query","required":true,"schema":{"type":"string","format":"email"}},{"name":"email-password","in":"query","required":true,"schema":{"type":"string","format":"password"}},{"name":"date-of-birth","in":"query","required":true,"schema":{"type":"string","format":"date"}},{"name":"phone-deprecated","in":"query","x-fill-example":"no","example":12345,"deprecated":true,"schema":{"type":"string","pattern":"/^&#x5C;+(?:[0-9]-?){6,14}[0-9]$/"}},{"name":"marital-status","in":"query","required":true,"example":"married","schema":{"type":"string","enum":["married","unmarried","widowed","unknown"],"default":"unknown"}},{"name":"interests","in":"query","required":true,"description":"__Exploded Array__ will send separate querystring parameter for each items eg - `interests=computers&interests=movies`","schema":{"type":"array","example":["computers","reading",["music","movies"]],"minItems":1,"maxItems":3,"items":{"type":"string","enum":["computers","hiking","swiming","movies","music","dancing","reading","painting"],"default":"hiking"}}},{"name":"tags","in":"query","description":"__Not Exploded Array__ will send a single querystring parameter with comma separated string eg - `tags=tall,dark,handsome`","style":"form","explode":false,"schema":{"type":"array","items":{"type":"string"}}}],"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"type":"array","items":"#/components/schemas/person"}}}}}}}},"components":{"schemas":{"category":{"type":"object","properties":{"catId":{"description":"Category ID","allOf":["#/components/schemas/id"]},"name":{"description":"Category name","type":"string","deprecated":true}}},"id":{"type":"string","format":"uuid"},"person":{"type":"object","required":["name","photoUrls"],"properties":{"primaryEmail":{"type":"string","format":"email"},"dob":{"description":"Date of Birth","type":"string","format":"date"},"id":{"title":"Unique ID","description":"SSN","allOf":["#/components/schemas/id"]},"category":{"title":"Person Category","description":"Categories this person belongs to","allOf":["#/components/schemas/category"]},"country":{"type":"object","deprecated":true,"properties":{"countryCode":{"type":"string"},"countryName":{"type":"string"}}},"dependentIds":{"type":"array","deprecated":true,"description":"IDs of Dependents .","items":{"type":"integer"},"example":[278,279,280,281]},"name":{"description":"Name of the person","type":"string","minLength":4,"examples":{"empty":{"value":null,"summary":"No Name"},"male-name":{"value":"James","summary":"Male name"},"female-name":{"value":"Ria","summary":"Female Name"},"gender-nutral-name":{"value":"Charlie","summary":"Gender Neutral Name"}}},"photoUrls":{"description":"The list of URL to a cute photos featuring pet","type":"array","maxItems":20,"items":{"type":"string","format":"url"}},"tags":{"title":"TAGS","description":"Tags attached to the person","type":"array","minItems":1,"items":"#/components/schemas/tag"},"maritalStatus":{"type":"string","description":"Marital status in case of adult","enum":["married","unmarried","widowed"]},"phone":{"description":"phone number in international format","type":"string","pattern":"/^&#x5C;+(?:[0-9]-?){6,14}[0-9]$/","example":"+1-202-555-0192","nullable":true}}},"tag":{"type":"object","properties":{"id":{"description":"Tag ID","allOf":["#/components/schemas/id"]},"name":{"description":"Tag name","type":"string","minLength":1}}}}},"tags":{}},"path":"docs","files":{"petstore_extended":"Petstore Extended Api","localization":"Localization","no-access":"no access","page":"Custom Page","additional-props":"additional-props","allof":"allof","arr-of-arr":"arr-of-arr","arrange-by-tags":"arrange-by-tags","array-and-object-nesting":"array-and-object-nesting","auth-test1":"auth-test1","auth":"auth","callback":"callback","circular":"circular","code-highlight":"code-highlight","collapsable":"collapsable","data-types-simple":"data-types-simple","data-types":"data-types","dynamic-form-params":"dynamic-form-params","dynamic-query-params":"dynamic-query-params","events":"events","example-with-nested-refs":"example-with-nested-refs","examples":"examples","file-upload":"file-upload","fill-example-test":"fill-example-test","large-spec":"large-spec","links":"links","markdown-headings":"markdown-headings","markdown":"markdown","mock":"mock","multi-datatypes-test":"multi-datatypes-test","multi-datatypes":"multi-datatypes","multipart-formdata":"multipart-formdata","multiple-oneof":"multiple-oneof","multiple-security-schemes":"multiple-security-schemes","no-server":"no-server","oauth-demo":"oauth-demo","oauth-o365":"oauth-o365","oauth-vendor-extension":"oauth-vendor-extension","oauth":"oauth","oneof-allof-nested":"oneof-allof-nested","oneof-combinations":"oneof-combinations","oneof-with-refs":"oneof-with-refs","oneof":"oneof","open-api-3-1-test":"open-api-3-1-test","open-api-3-1":"open-api-3-1","parameters":"parameters","petstore":"petstore","post-nobody":"post-nobody","request-body-multiple":"request-body-multiple","schema-title-and-descriptions":"schema-title-and-descriptions","schema":"schema","server-override":"server-override","server":"server","toomany-example-generation":"toomany-example-generation","webhook":"webhook","xml":"xml"},"pathsByTags":{"Test with various data types":{"name":"Test with various data types","description":"","isOpen":true,"items":[{"name":"/nested-object-in-request-body","path":"nested-object-in-request-body","type":"post","icon":null,"description":"Request Body accepting a JSON"},{"name":"/nested-object","path":"nested-object","type":"get","icon":null,"description":"Nested object"},{"name":"/simple-object","path":"simple-object","type":"get","icon":null,"description":"Simple object"},{"name":"/person","path":"person","type":"post","icon":null,"description":"Data Types with constraints"}]}},"locales":{"en":"English"},"locales_reload":false,"servers":[],"name":"Api Docs","doc_path":"docs"}