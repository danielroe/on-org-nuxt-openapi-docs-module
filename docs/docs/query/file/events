{"doc":{"openapi":"3.1.0","info":{"title":"Event Handling","version":"1.0","description":"<h3 id=\"the-code-demonstrate-how-some-events-can-be-used-listed-below-are-some-common-use-cases\">The code demonstrate how some events can be used. Listed below are some common use cases</h3>\n<ul>\n<li><code>before-render</code> - Good place to twaek the OpenAPI spec if needed. In this example the Title above is dynamically created </li>\n<li><code>before-try</code> - Good place to twaek the AJAX request sucha as adding a request header or abort the request</li>\n<li><code>after-try</code> - Good place to inspect the response received</li>\n</ul>\n<h4 id=\"to-test-it-out-go-ahead-and-click-try-below-you-will-notice-all-post-requests-are-aborted-and-get-are-success-\">To test it out go ahead and click TRY below, you will notice all <code>POST</code> requests are aborted and <code>GET</code> are success <br/><br/></h4>\n<pre><code class=\"hljs language-markup\">&lt;!doctype html&gt;\n\n&lt;html&gt;\n  &lt;body&gt;\n    &lt;rapi-doc id = &quot;thedoc&quot; spec-url = &quot;...&quot;&gt; &lt;/rapi-doc&gt;\n  \n    &lt;script&gt;\n      document.addEventListener(&#x27;DOMContentLoaded&#x27;, (event) =&gt; {\n        let docEl = document.getElementById(&quot;thedoc&quot;);\n\n        // Add various event listeners\n\n        // 1. before-render (Dynamically changes the Title of this Spec)\n        docEl.addEventListener(&#x27;before-render&#x27;, (e) =&gt; {\n          e.detail.spec.info.title = &quot;EVENTS - This text is updated during `before-render` event&quot;;\n        });\n\n        // 2. before-try (Adds a querystring param to all GET calls)\n        docEl.addEventListener(&#x27;before-try&#x27;, (e) =&gt; {\n          if (e.detail.request.method === &#x27;GET&#x27;) {\n            const url = new URL( e.detail.request.url);\n            url.searchParams.append(&#x27;delay&#x27;, &#x27;3&#x27;);\n            e.detail.request.url = url.searchParams.toString();\n          }\n        });\n\n        // 3. before-try (Aborts all post calls)\n        docEl.addEventListener(&#x27;before-try&#x27;, (e) =&gt; {\n          if (e.detail.request.method === &#x27;POST&#x27;) {\n            e.detail.controller.abort();\n          }\n        });\n\n        // 4. after-try\n        docEl.addEventListener(&#x27;after-try&#x27;, (e) =&gt; {\n          console.log(&quot;Hello from &#x27;after-try&#x27; event &quot;);\n        });\n\n        // 5. request-aborted\n        docEl.addEventListener(&#x27;request-aborted&#x27;, (e) =&gt; {\n          calert(&quot;POST Requests are aborted in &#x27;before-try&#x27; event &quot;);\n        });\n\n      })\n    &lt;/script&gt;\n  &lt;/body&gt; \n\n&lt;/html&gt;\n</code></pre>\n"},"servers":[{"url":"https://reqres.in/api/"}],"paths":{"/users":{"get":{"description":"List of users (paginated)","parameters":[{"name":"page","in":"query","schema":{"type":"integer","examples":[1,2]}}],"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"type":"object","description":"<p>Description of <strong>User</strong> object</p>\n","properties":{"page":{"description":"Current Page number","type":"integer"},"per_page":{"description":"Number of records per page","type":"integer"},"total":{"description":"Total number of records","type":"integer"},"total_pages":{"type":"integer"},"data":{"type":"array","description":"List of users","items":"#/components/schemas/user"},"support":"#/components/schemas/support"}}}}}},"tags":["other"]},"post":{"description":"Create a user","parameters":[{"name":"delay","in":"query","schema":{"type":"integer","examples":[1,10]}}],"requestBody":{"content":{"application/json":{"schema":"#/components/schemas/userInput"}}},"responses":{"201":{"description":"User creation response","content":{"application/json":{"schema":{"allOf":["#/components/schemas/userInput","#/components/schemas/createUserResponse"]}}}}},"tags":["other"]}}},"components":{"schemas":{"user":{"type":"object","properties":{"id":{"description":"User ID","type":"integer"},"email":{"description":"User Email","type":"string"},"first_name":{"description":"First Name","type":"string"},"last_name":{"description":"Last Name","type":"string"},"avatar":{"description":"Avatar URL","type":"string"}}},"support":{"type":"object","properties":{"url":{"description":"Support URL","type":"string"},"text":{"description":"Support URL - Description","type":"string"}}},"userInput":{"type":"object","description":"user object with `name` and `job` properties","properties":{"name":{"description":"User Name","type":"string"},"job":{"description":"Job","type":"string"}}},"createUserResponse":{"type":"object","properties":{"id":{"type":"integer"},"createdAt":{"type":"string"}}}}},"tags":{}},"path":"docs","files":{"petstore_extended":"Petstore Extended Api","localization":"Localization","no-access":"no access","page":"Custom Page","additional-props":"additional-props","allof":"allof","arr-of-arr":"arr-of-arr","arrange-by-tags":"arrange-by-tags","array-and-object-nesting":"array-and-object-nesting","auth-test1":"auth-test1","auth":"auth","callback":"callback","circular":"circular","code-highlight":"code-highlight","collapsable":"collapsable","data-types-simple":"data-types-simple","data-types":"data-types","dynamic-form-params":"dynamic-form-params","dynamic-query-params":"dynamic-query-params","events":"events","example-with-nested-refs":"example-with-nested-refs","examples":"examples","file-upload":"file-upload","fill-example-test":"fill-example-test","large-spec":"large-spec","links":"links","markdown-headings":"markdown-headings","markdown":"markdown","mock":"mock","multi-datatypes-test":"multi-datatypes-test","multi-datatypes":"multi-datatypes","multipart-formdata":"multipart-formdata","multiple-oneof":"multiple-oneof","multiple-security-schemes":"multiple-security-schemes","no-server":"no-server","oauth-demo":"oauth-demo","oauth-o365":"oauth-o365","oauth-vendor-extension":"oauth-vendor-extension","oauth":"oauth","oneof-allof-nested":"oneof-allof-nested","oneof-combinations":"oneof-combinations","oneof-with-refs":"oneof-with-refs","oneof":"oneof","open-api-3-1-test":"open-api-3-1-test","open-api-3-1":"open-api-3-1","parameters":"parameters","petstore":"petstore","post-nobody":"post-nobody","request-body-multiple":"request-body-multiple","schema-title-and-descriptions":"schema-title-and-descriptions","schema":"schema","server-override":"server-override","server":"server","toomany-example-generation":"toomany-example-generation","webhook":"webhook","xml":"xml"},"pathsByTags":{"other":{"name":"other","description":"","isOpen":true,"items":[{"name":"/users","path":"users","type":"get","icon":null,"description":null},{"name":"/users","path":"users","type":"post","icon":null,"description":null}]}},"locales":{"en":"English"},"locales_reload":false,"servers":[{"url":"https://reqres.in/api/"}],"name":"Api Docs","doc_path":"docs"}