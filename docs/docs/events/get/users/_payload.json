[{"data":1,"prerenderedAt":179},["Reactive",2],{"f7IEQSbxUl":3},{"doc":4,"path":105,"files":106,"pathsByTags":161,"locales":173,"locales_reload":175,"servers":176,"name":178,"doc_path":105},{"openapi":5,"info":6,"servers":10,"paths":13,"components":70,"tags":104},"3.1.0",{"title":7,"version":8,"description":9},"Event Handling","1.0","\u003Ch3 id=\"the-code-demonstrate-how-some-events-can-be-used-listed-below-are-some-common-use-cases\">The code demonstrate how some events can be used. Listed below are some common use cases\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Ccode>before-render\u003C/code> - Good place to twaek the OpenAPI spec if needed. In this example the Title above is dynamically created \u003C/li>\n\u003Cli>\u003Ccode>before-try\u003C/code> - Good place to twaek the AJAX request sucha as adding a request header or abort the request\u003C/li>\n\u003Cli>\u003Ccode>after-try\u003C/code> - Good place to inspect the response received\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"to-test-it-out-go-ahead-and-click-try-below-you-will-notice-all-post-requests-are-aborted-and-get-are-success-\">To test it out go ahead and click TRY below, you will notice all \u003Ccode>POST\u003C/code> requests are aborted and \u003Ccode>GET\u003C/code> are success \u003Cbr/>\u003Cbr/>\u003C/h4>\n\u003Cpre>\u003Ccode class=\"hljs language-markup\">&lt;!doctype html&gt;\n\n&lt;html&gt;\n  &lt;body&gt;\n    &lt;rapi-doc id = &quot;thedoc&quot; spec-url = &quot;...&quot;&gt; &lt;/rapi-doc&gt;\n  \n    &lt;script&gt;\n      document.addEventListener(&#x27;DOMContentLoaded&#x27;, (event) =&gt; {\n        let docEl = document.getElementById(&quot;thedoc&quot;);\n\n        // Add various event listeners\n\n        // 1. before-render (Dynamically changes the Title of this Spec)\n        docEl.addEventListener(&#x27;before-render&#x27;, (e) =&gt; {\n          e.detail.spec.info.title = &quot;EVENTS - This text is updated during `before-render` event&quot;;\n        });\n\n        // 2. before-try (Adds a querystring param to all GET calls)\n        docEl.addEventListener(&#x27;before-try&#x27;, (e) =&gt; {\n          if (e.detail.request.method === &#x27;GET&#x27;) {\n            const url = new URL( e.detail.request.url);\n            url.searchParams.append(&#x27;delay&#x27;, &#x27;3&#x27;);\n            e.detail.request.url = url.searchParams.toString();\n          }\n        });\n\n        // 3. before-try (Aborts all post calls)\n        docEl.addEventListener(&#x27;before-try&#x27;, (e) =&gt; {\n          if (e.detail.request.method === &#x27;POST&#x27;) {\n            e.detail.controller.abort();\n          }\n        });\n\n        // 4. after-try\n        docEl.addEventListener(&#x27;after-try&#x27;, (e) =&gt; {\n          console.log(&quot;Hello from &#x27;after-try&#x27; event &quot;);\n        });\n\n        // 5. request-aborted\n        docEl.addEventListener(&#x27;request-aborted&#x27;, (e) =&gt; {\n          calert(&quot;POST Requests are aborted in &#x27;before-try&#x27; event &quot;);\n        });\n\n      })\n    &lt;/script&gt;\n  &lt;/body&gt; \n\n&lt;/html&gt;\n\u003C/code>\u003C/pre>\n",[11],{"url":12},"https://reqres.in/api/",{"/users":14},{"get":15,"post":49},{"description":16,"parameters":17,"responses":26,"tags":47},"List of users (paginated)",[18],{"name":19,"in":20,"schema":21},"page","query",{"type":22,"examples":23},"integer",[24,25],1,2,{"200":27},{"description":28,"content":29},"Successful operation",{"application/json":30},{"schema":31},{"type":32,"description":33,"properties":34},"object","\u003Cp>Description of \u003Cstrong>User\u003C/strong> object\u003C/p>\n",{"page":35,"per_page":37,"total":39,"total_pages":41,"data":42,"support":46},{"description":36,"type":22},"Current Page number",{"description":38,"type":22},"Number of records per page",{"description":40,"type":22},"Total number of records",{"type":22},{"type":43,"description":44,"items":45},"array","List of users","#/components/schemas/user","#/components/schemas/support",[48],"other",{"description":50,"parameters":51,"requestBody":57,"responses":61,"tags":69},"Create a user",[52],{"name":53,"in":20,"schema":54},"delay",{"type":22,"examples":55},[24,56],10,{"content":58},{"application/json":59},{"schema":60},"#/components/schemas/userInput",{"201":62},{"description":63,"content":64},"User creation response",{"application/json":65},{"schema":66},{"allOf":67},[60,68],"#/components/schemas/createUserResponse",[48],{"schemas":71},{"user":72,"support":86,"userInput":93,"createUserResponse":100},{"type":32,"properties":73,"title":85},{"id":74,"email":76,"first_name":79,"last_name":81,"avatar":83},{"description":75,"type":22},"User ID",{"description":77,"type":78},"User Email","string",{"description":80,"type":78},"First Name",{"description":82,"type":78},"Last Name",{"description":84,"type":78},"Avatar URL","user",{"type":32,"properties":87,"title":92},{"url":88,"text":90},{"description":89,"type":78},"Support URL",{"description":91,"type":78},"Support URL - Description","support",{"type":32,"description":94,"properties":95},"user object with `name` and `job` properties",{"name":96,"job":98},{"description":97,"type":78},"User Name",{"description":99,"type":78},"Job",{"type":32,"properties":101},{"id":102,"createdAt":103},{"type":22},{"type":78},{},"docs",{"petstore_extended":107,"localization":108,"no-access":109,"additional-props":110,"allof":111,"arr-of-arr":112,"arrange-by-tags":113,"array-and-object-nesting":114,"auth-test1":115,"auth":116,"callback":117,"circular":118,"code-highlight":119,"collapsable":120,"data-types-simple":121,"data-types":122,"dynamic-form-params":123,"dynamic-query-params":124,"events":125,"example-with-nested-refs":126,"examples":127,"file-upload":128,"fill-example-test":129,"large-spec":130,"links":131,"markdown-headings":132,"markdown":133,"mock":134,"multi-datatypes-test":135,"multi-datatypes":136,"multipart-formdata":137,"multiple-oneof":138,"multiple-security-schemes":139,"no-server":140,"oauth-demo":141,"oauth-o365":142,"oauth-vendor-extension":143,"oauth":144,"oneof-allof-nested":145,"oneof-combinations":146,"oneof-with-refs":147,"oneof":148,"open-api-3-1-test":149,"open-api-3-1":150,"parameters":151,"petstore":152,"post-nobody":153,"request-body-multiple":154,"schema-title-and-descriptions":155,"schema":156,"server-override":157,"server":158,"toomany-example-generation":159,"xml":160},"Petstore Extended Api","Localization","no access","additional-props","allof","arr-of-arr","arrange-by-tags","array-and-object-nesting","auth-test1","auth","callback","circular","code-highlight","collapsable","data-types-simple","data-types","dynamic-form-params","dynamic-query-params","events","example-with-nested-refs","examples","file-upload","fill-example-test","large-spec","links","markdown-headings","markdown","mock","multi-datatypes-test","multi-datatypes","multipart-formdata","multiple-oneof","multiple-security-schemes","no-server","oauth-demo","oauth-o365","oauth-vendor-extension","oauth","oneof-allof-nested","oneof-combinations","oneof-with-refs","oneof","open-api-3-1-test","open-api-3-1","parameters","petstore","post-nobody","request-body-multiple","schema-title-and-descriptions","schema","server-override","server","toomany-example-generation","xml",{"other":162},{"name":48,"description":163,"isOpen":164,"items":165},"",true,[166,171],{"name":167,"path":168,"type":169,"icon":170,"description":170},"/users","users","get",null,{"name":167,"path":168,"type":172,"icon":170,"description":170},"post",{"en":174},"English",false,[177],{"url":12},"Api Docs",1698920479808]