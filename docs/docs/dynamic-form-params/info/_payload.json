[{"data":1,"prerenderedAt":128},["Reactive",2],{"bjUWqyIesb":3},{"doc":4,"path":54,"files":55,"pathsByTags":110,"locales":123,"locales_reload":125,"servers":126,"name":127,"doc_path":54},{"openapi":5,"info":6,"paths":10,"tags":53},"3.0.0",{"title":7,"version":8,"description":9},"Dynamic Form Params","1.0.0","Following OpenAPI spec demonstrate various ways to pass form params.\n  - You may pass predefined form params\n  - You may create dynamic form params by defining a form-param as an object, \n",{"/dynamic-form-parameters":11,"/fixed-form-parameters":27},{"post":12},{"tags":13,"summary":15,"description":16,"requestBody":17,"responses":24},[14],"Form Params","Dynamic Params","\u003Cpre>\u003Ccode class=\"hljs language-yaml\">\u003Cspan class=\"hljs-string\">/dynamic-form-parameters:\u003C/span>\n  \u003Cspan class=\"hljs-attr\">post:\u003C/span>\n    \u003Cspan class=\"hljs-attr\">summary:\u003C/span> \u003Cspan class=\"hljs-string\">Dynamic\u003C/span> \u003Cspan class=\"hljs-string\">Params\u003C/span>\n    \u003Cspan class=\"hljs-attr\">requestBody:\u003C/span>\n      \u003Cspan class=\"hljs-attr\">content:\u003C/span>\n        \u003Cspan class=\"hljs-attr\">multipart/form-data:\u003C/span>\n          \u003Cspan class=\"hljs-attr\">schema:\u003C/span>\n            \u003Cspan class=\"hljs-attr\">type:\u003C/span> \u003Cspan class=\"hljs-string\">object\u003C/span>\n    \u003Cspan class=\"hljs-attr\">responses:\u003C/span>\n      \u003Cspan class=\"hljs-attr\">&#x27;200&#x27;:\u003C/span>\n        \u003Cspan class=\"hljs-attr\">description:\u003C/span> \u003Cspan class=\"hljs-string\">successful\u003C/span> \u003Cspan class=\"hljs-string\">operation\u003C/span>\n\u003C/code>\u003C/pre>\n",{"content":18},{"multipart/form-data":19},{"schema":20,"example":23},{"type":21,"description":22},"object","\u003Cp>This param is defined as a dynamic param, this accepts data in a strict object notation (JSON) and its each \u003Ccode>key\u003C/code>, \u003Ccode>value\u003C/code> pairs is treated as a seperate form parameter. In this case the example will send 5 form parameters as shown below \u003C/p>\n\u003Cpre>\u003Ccode> a = 1\n b = 2\n c = [ &quot;red&quot;, &quot;black&quot; ]\n d = { &quot;d1&quot;:1, &quot;d2&quot;:2 }\n e = 3\n\u003C/code>\u003C/pre>\n","{\n  &quot;a&quot;:1,\n  &quot;b&quot;:2,\n  &quot;c&quot;:[\n    &quot;red&quot;,\n    &quot;black&quot;\n  ],\n  &quot;d&quot;:{ &quot;d1&quot;:1, &quot;d2&quot;:2 },\n  &quot;e&quot;:3\n}\n",{"200":25},{"description":26},"OK",{"post":28},{"tags":29,"summary":30,"requestBody":31,"responses":51},[14],"Fixed Params",{"content":32},{"multipart/form-data":33},{"schema":34},{"type":21,"description":35,"properties":36},"name and age are fixed form params",{"name":37,"age":47},{"type":38,"description":39,"examples":40},"string","name of person",{"example1":41,"example2":44},{"summary":42,"value":43},"Fullname","Nikola Tesla",{"summary":45,"value":46},"Name with prefix","Dr. Albert Einstein",{"type":48,"description":49,"example":50},"integer","age of person",28,{"200":52},{"description":26},{},"docs",{"petstore_extended":56,"localization":57,"no-access":58,"additional-props":59,"allof":60,"arr-of-arr":61,"arrange-by-tags":62,"array-and-object-nesting":63,"auth-test1":64,"auth":65,"callback":66,"circular":67,"code-highlight":68,"collapsable":69,"data-types-simple":70,"data-types":71,"dynamic-form-params":72,"dynamic-query-params":73,"events":74,"example-with-nested-refs":75,"examples":76,"file-upload":77,"fill-example-test":78,"large-spec":79,"links":80,"markdown-headings":81,"markdown":82,"mock":83,"multi-datatypes-test":84,"multi-datatypes":85,"multipart-formdata":86,"multiple-oneof":87,"multiple-security-schemes":88,"no-server":89,"oauth-demo":90,"oauth-o365":91,"oauth-vendor-extension":92,"oauth":93,"oneof-allof-nested":94,"oneof-combinations":95,"oneof-with-refs":96,"oneof":97,"open-api-3-1-test":98,"open-api-3-1":99,"parameters":100,"petstore":101,"post-nobody":102,"request-body-multiple":103,"schema-title-and-descriptions":104,"schema":105,"server-override":106,"server":107,"toomany-example-generation":108,"xml":109},"Petstore Extended Api","Localization","no access","additional-props","allof","arr-of-arr","arrange-by-tags","array-and-object-nesting","auth-test1","auth","callback","circular","code-highlight","collapsable","data-types-simple","data-types","dynamic-form-params","dynamic-query-params","events","example-with-nested-refs","examples","file-upload","fill-example-test","large-spec","links","markdown-headings","markdown","mock","multi-datatypes-test","multi-datatypes","multipart-formdata","multiple-oneof","multiple-security-schemes","no-server","oauth-demo","oauth-o365","oauth-vendor-extension","oauth","oneof-allof-nested","oneof-combinations","oneof-with-refs","oneof","open-api-3-1-test","open-api-3-1","parameters","petstore","post-nobody","request-body-multiple","schema-title-and-descriptions","schema","server-override","server","toomany-example-generation","xml",{"Form Params":111},{"name":14,"description":112,"isOpen":113,"items":114},"",true,[115,120],{"name":116,"path":117,"type":118,"icon":119,"description":15},"/dynamic-form-parameters","dynamic-form-parameters","post",null,{"name":121,"path":122,"type":118,"icon":119,"description":30},"/fixed-form-parameters","fixed-form-parameters",{"en":124},"English",false,[],"Api Docs",1698917522081]