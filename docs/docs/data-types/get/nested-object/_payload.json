[{"data":1,"prerenderedAt":322},["Reactive",2],{"8DsaI6TXjg":3},{"doc":4,"path":244,"files":245,"pathsByTags":300,"locales":318,"locales_reload":166,"servers":320,"name":321,"doc_path":244},{"openapi":5,"info":6,"paths":10,"components":174,"tags":243},"3.0.0",{"description":7,"version":8,"title":9},"Contains all data types","1.0.0","Testing different data-types",{"/nested-object-in-request-body":11,"/nested-object":20,"/simple-object":64,"/person":81},{"post":12},{"tags":13,"summary":15,"requestBody":16},[14],"Test with various data types","Request Body accepting a JSON",{"content":17},{"application/json":18},{"schema":19},"#/components/schemas/person",{"get":21},{"tags":22,"summary":23,"description":24,"responses":25},[14],"Nested object","\u003Cp>Response schema is made up of multiple nested object, For simple schema check out \u003Ca href=\"#get-/simple-object\">simple object\u003C/a>\u003C/p>\n",{"200":26},{"description":27,"content":28},"successful operation",{"application/json":29},{"schema":30},{"type":31,"description":32,"properties":33},"object","\u003Cp>Description of \u003Cstrong>Person\u003C/strong> object (Person must be bold)\u003C/p>\n",{"age":34,"fullName":37,"dependentIds":45,"dependentNames":49,"hobbies":61},{"description":35,"type":36},"\u003Cp>Person&#39;s \u003Cstrong>Age\u003C/strong> (age must be bold)\u003C/p>\n","integer",{"description":38,"type":31,"properties":39},"Person&#x27;s Full name",{"firstName":40,"lastName":43},{"description":41,"type":42},"_First name_ (First name should be italics)","string",{"description":44,"type":42},"`Last name` (last name must be monospaced)\n",{"type":46,"description":47,"items":48},"array","IDs of Dependents .",{"type":36},{"type":46,"description":50,"items":51},"\u003Cp>Full Name of \u003Cstrong>Dependents\u003C/strong> (Dependents must be bold).\u003C/p>\n",{"type":31,"properties":52},{"firstNameParts":53,"dependentLastName":60},{"description":54,"type":31,"properties":55},"\u003Cp>Parts of \u003Cstrong>First Name\u003C/strong> (First Name must be bold)\u003C/p>\n",{"firstName":56,"aLongFieldForTestingHowItShowsUpInSchemaModelWhenItEncountersLongField":58},{"description":57,"type":42},"This is a very very long description to test how will it show up on a API spec renderer tool such as RapiDoc. This lable must be big enough to wrap into next line",{"description":59,"type":42},"Dependent Last Name",{"description":59,"type":42},{"type":46,"description":62,"items":63},"array of objects",{"type":31},{"get":65},{"tags":66,"summary":67,"description":68,"responses":69},[14],"Simple object","\u003Cp>Response schema is a simple object, which contains only primitive properties. For complex schema check out \u003Ca href=\"#get-/nested-object\">nested object\u003C/a>\u003C/p>\n",{"200":70},{"description":27,"content":71},{"application/json":72},{"schema":73},{"type":31,"properties":74},{"name":75,"age":77},{"description":76,"type":42},"Person Name",{"description":78,"type":36,"minimum":79,"maximum":80},"Person Age",1,100,{"post":82},{"tags":83,"summary":84,"description":85,"parameters":86,"responses":169},[14],"Data Types with constraints","Request-Parameters and Response-Schema contains various data types and constrains. Check out how is it desplayed below",[87,97,116,121,124,128,132,138,146,162],{"name":88,"in":89,"description":90,"required":91,"example":92,"schema":93},"height","query","height (in inches)",true,70,{"type":36,"format":94,"minimum":95,"maximum":96},"int32",12,120,{"name":98,"in":89,"description":99,"required":91,"schema":100,"examples":102},"full-name","Name of a person",{"type":42,"minimum":101},3,{"empty":103,"male-name":106,"female-name":110,"gender-nutral-name":113},{"value":104,"summary":105},null,"No Name",{"value":107,"summary":108,"description":109},"James","Male name","\u003Cp>\u003Ccode>Lorem ipsum dolor sit amet\u003C/code> consectetur adipisicing elit.\u003C/p>\n\u003Col>\n\u003Cli>Animi alias iste\u003C/li>\n\u003Cli>minus iure\u003C/li>\n\u003Cli>assumenda quisquam\u003C/li>\n\u003Cli>qui cum id ab nesciunt\u003C/li>\n\u003C/ol>\n\u003Cp>\u003Cem>Impedit voluptatum asperiores obcaecati blanditiis\u003C/em> perferendis error repudiandae odit, veniam ab culpa exercitationem eaque,\u003C/p>\n\u003Cblockquote>\n\u003Cp>repellat \u003Cstrong>laboriosam sequi dolor doloribus\u003C/strong> voluptas\u003C/p>\n\u003C/blockquote>\n\u003Cp> natus hic fugiat incidunt.\u003C/p>\n\u003Cul>\n\u003Cli>laborum odio dolore\u003C/li>\n\u003Cli>corrupti tenetur\u003C/li>\n\u003Cli>nostrum aut sunt,\u003C/li>\n\u003C/ul>\n\u003Cp>quis vel neque. Vitae maxime aut assumenda ipsum.\u003C/p>\n",{"value":111,"summary":112},"Ria","Female Name",{"value":114,"summary":115},"Charlie","Gender Neutral Name",{"name":117,"in":89,"description":118,"schema":119},"social-connection","facebook, linkedin, github, instagram, twitter etc",{"type":42,"format":120},"url",{"name":122,"in":89,"required":91,"schema":123},"email",{"type":42,"format":122},{"name":125,"in":89,"required":91,"schema":126},"email-password",{"type":42,"format":127},"password",{"name":129,"in":89,"required":91,"schema":130},"date-of-birth",{"type":42,"format":131},"date",{"name":133,"in":89,"x-fill-example":134,"example":135,"deprecated":91,"schema":136},"phone-deprecated","no",12345,{"type":42,"pattern":137},"/^&#x5C;+(?:[0-9]-?){6,14}[0-9]$/",{"name":139,"in":89,"required":91,"example":140,"schema":141},"marital-status","married",{"type":42,"enum":142,"default":145},[140,143,144,145],"unmarried","widowed","unknown",{"name":147,"in":89,"required":91,"description":148,"schema":149},"interests","__Exploded Array__ will send separate querystring parameter for each items eg - `interests=computers&interests=movies`",{"type":46,"example":150,"minItems":79,"maxItems":101,"items":156},[151,152,153],"computers","reading",[154,155],"music","movies",{"type":42,"enum":157,"default":158},[151,158,159,155,154,160,152,161],"hiking","swiming","dancing","painting",{"name":163,"in":89,"description":164,"style":165,"explode":166,"schema":167},"tags","__Not Exploded Array__ will send a single querystring parameter with comma separated string eg - `tags=tall,dark,handsome`","form",false,{"type":46,"items":168},{"type":42},{"200":170},{"description":27,"content":171},{"application/json":172},{"schema":173},{"type":46,"items":19},{"schemas":175},{"category":176,"id":184,"person":186,"tag":236},{"type":31,"properties":177},{"catId":178,"name":182},{"description":179,"allOf":180},"Category ID",[181],"#/components/schemas/id",{"description":183,"type":42,"deprecated":91},"Category name",{"type":42,"format":185},"uuid",{"type":31,"required":187,"properties":190},[188,189],"name","photoUrls",{"primaryEmail":191,"dob":192,"id":194,"category":198,"country":203,"dependentIds":207,"name":214,"photoUrls":222,"tags":226,"maritalStatus":230,"phone":233},{"type":42,"format":122},{"description":193,"type":42,"format":131},"Date of Birth",{"title":195,"description":196,"allOf":197},"Unique ID","SSN",[181],{"title":199,"description":200,"allOf":201},"Person Category","Categories this person belongs to",[202],"#/components/schemas/category",{"type":31,"deprecated":91,"properties":204},{"countryCode":205,"countryName":206},{"type":42},{"type":42},{"type":46,"deprecated":91,"description":47,"items":208,"example":209},{"type":36},[210,211,212,213],278,279,280,281,{"description":215,"type":42,"minLength":216,"examples":217},"Name of the person",4,{"empty":218,"male-name":219,"female-name":220,"gender-nutral-name":221},{"value":104,"summary":105},{"value":107,"summary":108},{"value":111,"summary":112},{"value":114,"summary":115},{"description":223,"type":46,"maxItems":224,"items":225},"The list of URL to a cute photos featuring pet",20,{"type":42,"format":120},{"title":227,"description":228,"type":46,"minItems":79,"items":229},"TAGS","Tags attached to the person","#/components/schemas/tag",{"type":42,"description":231,"enum":232},"Marital status in case of adult",[140,143,144],{"description":234,"type":42,"pattern":137,"example":235,"nullable":91},"phone number in international format","+1-202-555-0192",{"type":31,"properties":237},{"id":238,"name":241},{"description":239,"allOf":240},"Tag ID",[181],{"description":242,"type":42,"minLength":79},"Tag name",{},"docs",{"petstore_extended":246,"localization":247,"no-access":248,"additional-props":249,"allof":250,"arr-of-arr":251,"arrange-by-tags":252,"array-and-object-nesting":253,"auth-test1":254,"auth":255,"callback":256,"circular":257,"code-highlight":258,"collapsable":259,"data-types-simple":260,"data-types":261,"dynamic-form-params":262,"dynamic-query-params":263,"events":264,"example-with-nested-refs":265,"examples":266,"file-upload":267,"fill-example-test":268,"large-spec":269,"links":270,"markdown-headings":271,"markdown":272,"mock":273,"multi-datatypes-test":274,"multi-datatypes":275,"multipart-formdata":276,"multiple-oneof":277,"multiple-security-schemes":278,"no-server":279,"oauth-demo":280,"oauth-o365":281,"oauth-vendor-extension":282,"oauth":283,"oneof-allof-nested":284,"oneof-combinations":285,"oneof-with-refs":286,"oneof":287,"open-api-3-1-test":288,"open-api-3-1":289,"parameters":290,"petstore":291,"post-nobody":292,"request-body-multiple":293,"schema-title-and-descriptions":294,"schema":295,"server-override":296,"server":297,"toomany-example-generation":298,"xml":299},"Petstore Extended Api","Localization","no access","additional-props","allof","arr-of-arr","arrange-by-tags","array-and-object-nesting","auth-test1","auth","callback","circular","code-highlight","collapsable","data-types-simple","data-types","dynamic-form-params","dynamic-query-params","events","example-with-nested-refs","examples","file-upload","fill-example-test","large-spec","links","markdown-headings","markdown","mock","multi-datatypes-test","multi-datatypes","multipart-formdata","multiple-oneof","multiple-security-schemes","no-server","oauth-demo","oauth-o365","oauth-vendor-extension","oauth","oneof-allof-nested","oneof-combinations","oneof-with-refs","oneof","open-api-3-1-test","open-api-3-1","parameters","petstore","post-nobody","request-body-multiple","schema-title-and-descriptions","schema","server-override","server","toomany-example-generation","xml",{"Test with various data types":301},{"name":14,"description":302,"isOpen":91,"items":303},"",[304,308,312,315],{"name":305,"path":306,"type":307,"icon":104,"description":15},"/nested-object-in-request-body","nested-object-in-request-body","post",{"name":309,"path":310,"type":311,"icon":104,"description":23},"/nested-object","nested-object","get",{"name":313,"path":314,"type":311,"icon":104,"description":67},"/simple-object","simple-object",{"name":316,"path":317,"type":307,"icon":104,"description":84},"/person","person",{"en":319},"English",[],"Api Docs",1698919217596]