import{_ as W,a as M,b as G,c as V,d as z,e as H}from"./SearchBlock.fe27b004.js";import{_ as K}from"./client-only.ebd476aa.js";import{f as Q,h as X,j as Y,r as N,k as r,g as Z,l as ee,c as te,u as e,m as h,b as R,w as ne,n as se,o as d}from"./entry.71760bb6.js";import{u as oe}from"./vue.f36acd1f.679bd063.js";import{d as re}from"./docs.data-types.config.c8162647.js";import"./nuxt-link.ba0f9af6.js";import"./OpenApiDropdown.244fc662.js";const a={openapi:"3.0.0",info:{description:"Contains all data types",version:"1.0.0",title:"Testing different data-types"},paths:{"/nested-object-in-request-body":{post:{tags:["Test with various data types"],summary:"Request Body accepting a JSON",requestBody:{content:{"application/json":{schema:"#/components/schemas/person"}}}}},"/nested-object":{get:{tags:["Test with various data types"],summary:"Nested object",description:`<p>Response schema is made up of multiple nested object, For simple schema check out <a href="#get-/simple-object">simple object</a></p>
`,responses:{200:{description:"successful operation",content:{"application/json":{schema:{type:"object",description:`<p>Description of <strong>Person</strong> object (Person must be bold)</p>
`,properties:{age:{description:`<p>Person&#39;s <strong>Age</strong> (age must be bold)</p>
`,type:"integer"},fullName:{description:"Person&#x27;s Full name",type:"object",properties:{firstName:{description:"_First name_ (First name should be italics)",type:"string"},lastName:{description:"`Last name` (last name must be monospaced)\n",type:"string"}}},dependentIds:{type:"array",description:"IDs of Dependents .",items:{type:"integer"}},dependentNames:{type:"array",description:`<p>Full Name of <strong>Dependents</strong> (Dependents must be bold).</p>
`,items:{type:"object",properties:{firstNameParts:{description:`<p>Parts of <strong>First Name</strong> (First Name must be bold)</p>
`,type:"object",properties:{firstName:{description:"This is a very very long description to test how will it show up on a API spec renderer tool such as RapiDoc. This lable must be big enough to wrap into next line",type:"string"},aLongFieldForTestingHowItShowsUpInSchemaModelWhenItEncountersLongField:{description:"Dependent Last Name",type:"string"}}},dependentLastName:{description:"Dependent Last Name",type:"string"}}}},hobbies:{type:"array",description:"array of objects",items:{type:"object"}}}}}}}}}},"/simple-object":{get:{tags:["Test with various data types"],summary:"Simple object",description:`<p>Response schema is a simple object, which contains only primitive properties. For complex schema check out <a href="#get-/nested-object">nested object</a></p>
`,responses:{200:{description:"successful operation",content:{"application/json":{schema:{type:"object",properties:{name:{description:"Person Name",type:"string"},age:{description:"Person Age",type:"integer",minimum:1,maximum:100}}}}}}}}},"/person":{post:{tags:["Test with various data types"],summary:"Data Types with constraints",description:"Request-Parameters and Response-Schema contains various data types and constrains. Check out how is it desplayed below",parameters:[{name:"height",in:"query",description:"height (in inches)",required:!0,example:70,schema:{type:"integer",format:"int32",minimum:12,maximum:120}},{name:"full-name",in:"query",description:"Name of a person",required:!0,schema:{type:"string",minimum:3},examples:{empty:{value:null,summary:"No Name"},"male-name":{value:"James",summary:"Male name",description:`<p><code>Lorem ipsum dolor sit amet</code> consectetur adipisicing elit.</p>
<ol>
<li>Animi alias iste</li>
<li>minus iure</li>
<li>assumenda quisquam</li>
<li>qui cum id ab nesciunt</li>
</ol>
<p><em>Impedit voluptatum asperiores obcaecati blanditiis</em> perferendis error repudiandae odit, veniam ab culpa exercitationem eaque,</p>
<blockquote>
<p>repellat <strong>laboriosam sequi dolor doloribus</strong> voluptas</p>
</blockquote>
<p> natus hic fugiat incidunt.</p>
<ul>
<li>laborum odio dolore</li>
<li>corrupti tenetur</li>
<li>nostrum aut sunt,</li>
</ul>
<p>quis vel neque. Vitae maxime aut assumenda ipsum.</p>
`},"female-name":{value:"Ria",summary:"Female Name"},"gender-nutral-name":{value:"Charlie",summary:"Gender Neutral Name"}}},{name:"social-connection",in:"query",description:"facebook, linkedin, github, instagram, twitter etc",schema:{type:"string",format:"url"}},{name:"email",in:"query",required:!0,schema:{type:"string",format:"email"}},{name:"email-password",in:"query",required:!0,schema:{type:"string",format:"password"}},{name:"date-of-birth",in:"query",required:!0,schema:{type:"string",format:"date"}},{name:"phone-deprecated",in:"query","x-fill-example":"no",example:12345,deprecated:!0,schema:{type:"string",pattern:"/^&#x5C;+(?:[0-9]-?){6,14}[0-9]$/"}},{name:"marital-status",in:"query",required:!0,example:"married",schema:{type:"string",enum:["married","unmarried","widowed","unknown"],default:"unknown"}},{name:"interests",in:"query",required:!0,description:"__Exploded Array__ will send separate querystring parameter for each items eg - `interests=computers&interests=movies`",schema:{type:"array",example:["computers","reading",["music","movies"]],minItems:1,maxItems:3,items:{type:"string",enum:["computers","hiking","swiming","movies","music","dancing","reading","painting"],default:"hiking"}}},{name:"tags",in:"query",description:"__Not Exploded Array__ will send a single querystring parameter with comma separated string eg - `tags=tall,dark,handsome`",style:"form",explode:!1,schema:{type:"array",items:{type:"string"}}}],responses:{200:{description:"successful operation",content:{"application/json":{schema:{type:"array",items:"#/components/schemas/person"}}}}}}}},components:{schemas:{category:{type:"object",properties:{catId:{description:"Category ID",allOf:["#/components/schemas/id"]},name:{description:"Category name",type:"string",deprecated:!0}}},id:{type:"string",format:"uuid"},person:{type:"object",required:["name","photoUrls"],properties:{primaryEmail:{type:"string",format:"email"},dob:{description:"Date of Birth",type:"string",format:"date"},id:{title:"Unique ID",description:"SSN",allOf:["#/components/schemas/id"]},category:{title:"Person Category",description:"Categories this person belongs to",allOf:["#/components/schemas/category"]},country:{type:"object",deprecated:!0,properties:{countryCode:{type:"string"},countryName:{type:"string"}}},dependentIds:{type:"array",deprecated:!0,description:"IDs of Dependents .",items:{type:"integer"},example:[278,279,280,281]},name:{description:"Name of the person",type:"string",minLength:4,examples:{empty:{value:null,summary:"No Name"},"male-name":{value:"James",summary:"Male name"},"female-name":{value:"Ria",summary:"Female Name"},"gender-nutral-name":{value:"Charlie",summary:"Gender Neutral Name"}}},photoUrls:{description:"The list of URL to a cute photos featuring pet",type:"array",maxItems:20,items:{type:"string",format:"url"}},tags:{title:"TAGS",description:"Tags attached to the person",type:"array",minItems:1,items:"#/components/schemas/tag"},maritalStatus:{type:"string",description:"Marital status in case of adult",enum:["married","unmarried","widowed"]},phone:{description:"phone number in international format",type:"string",pattern:"/^&#x5C;+(?:[0-9]-?){6,14}[0-9]$/",example:"+1-202-555-0192",nullable:!0}}},tag:{type:"object",properties:{id:{description:"Tag ID",allOf:["#/components/schemas/id"]},name:{description:"Tag name",type:"string",minLength:1}}}}},tags:{}},ae={class:"content-container"},ye=Q({__name:"data-types",setup(ie){const f=X(),T=Y(),{$openapidoc:v,$openapidocBus:g,$openapidocRef:b}=se(),_=N(""),C=N(0),w=N(re.path.toString()),l=N(a??{}),y=r(()=>"data-types"),o=r(()=>f.params.type.toString()),D=r(()=>(f.params.mathod??"default").toString()),j=r(()=>o.value==="info"),k=r(()=>o.value==="auth"),S=r(()=>o.value==="components"),m=r(()=>v.currentLocale());b.setComponents(a.components),b.setDefinitions(a.definitions),b.setDocPath(w.value),b.setFile(y.value);const i=r(()=>{const n={...a.paths};if(!n)return null;for(const s in n){let t=s.toString();if(t.startsWith("/")&&(t=t.substring(1)),t.endsWith("/")&&(t=t.substring(-1)),t=t.replace(/[/\\.?+=&{}]/gumi,"_").replace(/__+/,"_"),t===D.value)return _.value=s.toString(),n[s]??null}return null}),c=r(()=>{const n={...a.webhooks};if(!n)return null;for(const s in n){let t=s.toString();if(t.startsWith("/")&&(t=t.substring(1)),t.endsWith("/")&&(t=t.substring(-1)),t=t.replace(/[/\\.?+=&{}]/gumi,"_").replace(/__+/,"_"),t===D.value)return _.value=s.toString(),n[s][o.value]??null}return null}),p=r(()=>i.value?i.value[o.value]??null:null),I=r(()=>i.value?i.value.parameters??null:null),F=r(()=>{const n=v.currentLocale()??"";return j.value?"[data-types] - Info Docs":k.value?"[data-types] - Authorization":S.value?"[data-types] - Components Docs":p.value?"[data-types] - "+(p.value["x-summary-"+n.value]||p.value.summary||""):""}),O=r(()=>{const n=v.currentLocale()??"";return j.value?"[data-types] - Info Docs":k.value?"[data-types] - Authorization":S.value?"[data-types] - Components Docs":p.value&&(p.value["x-description-"+n.value]||p.value.description)||""});oe({title:F.value,meta:[{name:"description",content:O.value}],htmlAttrs:{lang:m.value},bodyAttrs:{class:"oapi"}});const A=r(()=>{if(i.value){if(i.value.servers&&i.value.servers[0])return i.value.servers[0].url??null;if(i.value[o.value]&&i.value[o.value].servers&&i.value[o.value].servers[0])return i.value[o.value].servers[0].url??null}if(c.value){if(c.value.servers&&c.value.servers[0])return c.value.servers[0].url??null;if(c.value[o.value]&&c.value[o.value].servers&&c.value[o.value].servers[0])return c.value[o.value].servers[0].url??null}let n=C.value;if(n>0&&a.servers&&!a.servers[n]&&(n=0),!a.servers||!a.servers[n])return"";if(a.servers[n].variables){const s=Object.values(a.servers[n].variables)??[];if(s&&s.length)return s[0].default}return a.servers[n].url??""});function L(n){C.value=n}function U(){var s;(((s=document.querySelector(".content-container"))==null?void 0:s.querySelectorAll("h1[id], h2[id], h3[id], h4[id]"))??[]).forEach(t=>{t.addEventListener("click",u=>{const q=t.getAttribute("id"),x=window.location.origin+window.location.pathname+"#"+q;v.copyToClipboard(x,u,!1),T.push({path:f.path,hash:"#"+q}),setTimeout(()=>{t.scrollIntoView({behavior:"smooth",block:"start"})},100)})})}function $(){if(f.hash)return;const n=document.querySelector(".oapi-content");n&&(n.scrollTop=0)}function P(){const n=JSON.stringify(a,null,4),s=new Blob([n],{type:"application/json"}),t=URL.createObjectURL(s),u=document.createElement("a");u.href=t,u.download=y.value+".json",document.body.appendChild(u),u.click(),document.body.removeChild(u),URL.revokeObjectURL(t)}return Z(()=>{g.$on("downloadJsonDoc",P),g.$on("changeServer",L),$(),U()}),ee(()=>{g.$off("downloadJsonDoc",P),g.$off("changeServer",L)}),(n,s)=>{const t=W,u=M,q=G,x=V,B=H,E=z,J=K;return d(),te("div",ae,[e(j)&&e(l).info?(d(),h(t,{key:0,info:e(l).info,servers:e(l).servers,"current-locale":e(m)},null,8,["info","servers","current-locale"])):e(k)&&e(l).components?(d(),h(u,{key:1,components:e(l).components,"current-locale":e(m)},null,8,["components","current-locale"])):e(S)&&e(l).components?(d(),h(q,{key:2,components:e(l).components,"current-locale":e(m)},null,8,["components","current-locale"])):e(p)?(d(),h(x,{key:3,route:e(p),"current-locale":e(m),method:e(o),components:e(l).components,url:e(_),path_doc:e(w),file:e(y),server:e(A),"sub-params":e(I)},null,8,["route","current-locale","method","components","url","path_doc","file","server","sub-params"])):e(c)?(d(),h(x,{key:4,route:e(c),"current-locale":e(m),method:e(o),components:e(l).components,url:e(_),path_doc:e(w),file:e(y),server:e(A),"sub-params":e(I)},null,8,["route","current-locale","method","components","url","path_doc","file","server","sub-params"])):(d(),h(B,{key:5})),R(J,null,{default:ne(()=>[R(E,{"current-locale":e(m),doc:e(l),path:e(w),file:e(y)},null,8,["current-locale","doc","path","file"])]),_:1})])}}});export{ye as default};
