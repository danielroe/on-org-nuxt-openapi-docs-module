import{_ as W,a as M,b as G,c as V,d as z,e as H}from"./SearchBlock.3e19f150.js";import{_ as K}from"./client-only.45c4cd0b.js";import{f as Q,h as X,j as Y,r as x,k as o,g as Z,l as ee,c as te,u as e,m as d,b as R,w as ne,n as se,o as m}from"./entry.4698dbd5.js";import{u as ae}from"./vue.f36acd1f.e66bd35a.js";import{d as oe}from"./docs.data-types.config.c8162647.js";import"./nuxt-link.d2cc8467.js";import"./OpenApiDropdown.6e2e3875.js";const C={openapi:"3.0.0",info:{description:"Contains all data types",version:"1.0.0",title:"Testing different data-types"},paths:{"/nested-object-in-request-body":{post:{tags:["Test with various data types"],summary:"Request Body accepting a JSON",requestBody:{content:{"application/json":{schema:"#/components/schemas/person"}}}}},"/nested-object":{get:{tags:["Test with various data types"],summary:"Nested object",description:`<p>Response schema is made up of multiple nested object, For simple schema check out <a href="#get-/simple-object">simple object</a></p>
`,responses:{200:{description:"successful operation",content:{"application/json":{schema:{type:"object",description:`<p>Description of <strong>Person</strong> object (Person must be bold)</p>
`,properties:{age:{description:`<p>Person&#39;s <strong>Age</strong> (age must be bold)</p>
`,type:"integer"},fullName:{description:"Person&#x27;s Full name",type:"object",properties:{firstName:{description:"_First name_ (First name should be italics)",type:"string"},lastName:{description:"`Last name` (last name must be monospaced)\n",type:"string"}}},dependentIds:{type:"array",description:"IDs of Dependents .",items:{type:"integer"}},dependentNames:{type:"array",description:`<p>Full Name of <strong>Dependents</strong> (Dependents must be bold).</p>
`,items:{type:"object",properties:{firstNameParts:{description:`<p>Parts of <strong>First Name</strong> (First Name must be bold)</p>
`,type:"object",properties:{firstName:{description:"This is a very very long description to test how will it show up on a API spec renderer tool such as RapiDoc. This lable must be big enough to wrap into next line",type:"string"},aLongFieldForTestingHowItShowsUpInSchemaModelWhenItEncountersLongField:{description:"Dependent Last Name",type:"string"}}},dependentLastName:{description:"Dependent Last Name",type:"string"}}}},hobbies:{type:"array",description:"array of objects",items:{type:"object"}}}}}}}}}},"/simple-object":{get:{tags:["Test with various data types"],summary:"Simple object",description:`<p>Response schema is a simple object, which contains only primitive properties. For complex schema check out <a href="#get-/nested-object">nested object</a></p>
`,responses:{200:{description:"successful operation",content:{"application/json":{schema:{type:"object",properties:{name:{description:"Person Name",type:"string"},age:{description:"Person Age",type:"integer",minimum:1,maximum:100}}}}}}}}},"/person":{post:{tags:["Test with various data types"],summary:"Data Types with constraints",description:"Request-Parameters and Response-Schema contains various data types and constrains. Check out how is it desplayed below",parameters:[{name:"height",in:"query",description:"height (in inches)",required:!0,example:70,schema:{type:"integer",format:"int32",minimum:12,maximum:120}},{name:"full-name",in:"query",description:"Name of a person",required:!0,schema:{type:"string",minimum:3},examples:{empty:{value:null,summary:"No Name"},"male-name":{value:"James",summary:"Male name",description:`<p><code>Lorem ipsum dolor sit amet</code> consectetur adipisicing elit.</p>
<ol>
<li>Animi alias iste</li>
<li>minus iure</li>
<li>assumenda quisquam</li>
<li>qui cum id ab nesciunt</li>
</ol>
<p><em>Impedit voluptatum asperiores obcaecati blanditiis</em> perferendis error repudiandae odit, veniam ab culpa exercitationem eaque,</p>
<blockquote>
<p>repellat <strong>laboriosam sequi dolor doloribus</strong> voluptas</p>
</blockquote>
<p> natus hic fugiat incidunt.</p>
<ul>
<li>laborum odio dolore</li>
<li>corrupti tenetur</li>
<li>nostrum aut sunt,</li>
</ul>
<p>quis vel neque. Vitae maxime aut assumenda ipsum.</p>
`},"female-name":{value:"Ria",summary:"Female Name"},"gender-nutral-name":{value:"Charlie",summary:"Gender Neutral Name"}}},{name:"social-connection",in:"query",description:"facebook, linkedin, github, instagram, twitter etc",schema:{type:"string",format:"url"}},{name:"email",in:"query",required:!0,schema:{type:"string",format:"email"}},{name:"email-password",in:"query",required:!0,schema:{type:"string",format:"password"}},{name:"date-of-birth",in:"query",required:!0,schema:{type:"string",format:"date"}},{name:"phone-deprecated",in:"query","x-fill-example":"no",example:12345,deprecated:!0,schema:{type:"string",pattern:"/^&#x5C;+(?:[0-9]-?){6,14}[0-9]$/"}},{name:"marital-status",in:"query",required:!0,example:"married",schema:{type:"string",enum:["married","unmarried","widowed","unknown"],default:"unknown"}},{name:"interests",in:"query",required:!0,description:"__Exploded Array__ will send separate querystring parameter for each items eg - `interests=computers&interests=movies`",schema:{type:"array",example:["computers","reading",["music","movies"]],minItems:1,maxItems:3,items:{type:"string",enum:["computers","hiking","swiming","movies","music","dancing","reading","painting"],default:"hiking"}}},{name:"tags",in:"query",description:"__Not Exploded Array__ will send a single querystring parameter with comma separated string eg - `tags=tall,dark,handsome`",style:"form",explode:!1,schema:{type:"array",items:{type:"string"}}}],responses:{200:{description:"successful operation",content:{"application/json":{schema:{type:"array",items:"#/components/schemas/person"}}}}}}}},components:{schemas:{category:{type:"object",properties:{catId:{description:"Category ID",allOf:["#/components/schemas/id"]},name:{description:"Category name",type:"string",deprecated:!0}}},id:{type:"string",format:"uuid"},person:{type:"object",required:["name","photoUrls"],properties:{primaryEmail:{type:"string",format:"email"},dob:{description:"Date of Birth",type:"string",format:"date"},id:{title:"Unique ID",description:"SSN",allOf:["#/components/schemas/id"]},category:{title:"Person Category",description:"Categories this person belongs to",allOf:["#/components/schemas/category"]},country:{type:"object",deprecated:!0,properties:{countryCode:{type:"string"},countryName:{type:"string"}}},dependentIds:{type:"array",deprecated:!0,description:"IDs of Dependents .",items:{type:"integer"},example:[278,279,280,281]},name:{description:"Name of the person",type:"string",minLength:4,examples:{empty:{value:null,summary:"No Name"},"male-name":{value:"James",summary:"Male name"},"female-name":{value:"Ria",summary:"Female Name"},"gender-nutral-name":{value:"Charlie",summary:"Gender Neutral Name"}}},photoUrls:{description:"The list of URL to a cute photos featuring pet",type:"array",maxItems:20,items:{type:"string",format:"url"}},tags:{title:"TAGS",description:"Tags attached to the person",type:"array",minItems:1,items:"#/components/schemas/tag"},maritalStatus:{type:"string",description:"Marital status in case of adult",enum:["married","unmarried","widowed"]},phone:{description:"phone number in international format",type:"string",pattern:"/^&#x5C;+(?:[0-9]-?){6,14}[0-9]$/",example:"+1-202-555-0192",nullable:!0}}},tag:{type:"object",properties:{id:{description:"Tag ID",allOf:["#/components/schemas/id"]},name:{description:"Tag name",type:"string",minLength:1}}}}},tags:{}},re={class:"content-container"},ye=Q({__name:"data-types",setup(ie){const y=X(),T=Y(),{$openapidoc:v,$openapidocBus:f,$openapidocRef:g}=se(),b=x(""),D=x(0),_=x(oe.path.toString()),s=x(C??{}),h=o(()=>"data-types"),a=o(()=>y.params.type.toString()),I=o(()=>(y.params.mathod??"default").toString()),N=o(()=>a.value==="info"),j=o(()=>a.value==="auth"),k=o(()=>a.value==="components"),p=o(()=>v.currentLocale());g.setComponents(C.components),g.setDefinitions(C.definitions),g.setDocPath(_.value),g.setFile(h.value);const r=o(()=>{if(!s.value.paths)return null;for(let n in s.value.paths){let t=n;if(t.startsWith("/")&&(t=t.substring(1)),t.endsWith("/")&&(t=t.substring(-1)),t=t.replace(/[/\\.?+=&{}]/gumi,"_").replace(/__+/,"_"),t===I.value)return b.value=n,s.value.paths[n]??null}return null}),i=o(()=>{if(!s.value.webhooks)return null;for(let n in s.value.webhooks){let t=n;if(t.startsWith("/")&&(t=t.substring(1)),t.endsWith("/")&&(t=t.substring(-1)),t=t.replace(/[/\\.?+=&{}]/gumi,"_").replace(/__+/,"_"),t===I.value)return b.value=n,s.value.webhooks[n][a.value]??null}return null}),c=o(()=>r.value?r.value[a.value]??null:null),S=o(()=>r.value?r.value.parameters??null:null),F=o(()=>{const n=v.currentLocale()??"";return N.value?"[data-types] - Info Docs":j.value?"[data-types] - Authorization":k.value?"[data-types] - Components Docs":c.value?"[data-types] - "+(c.value["x-summary-"+n.value]||c.value.summary||""):""}),O=o(()=>{const n=v.currentLocale()??"";return N.value?"[data-types] - Info Docs":j.value?"[data-types] - Authorization":k.value?"[data-types] - Components Docs":c.value&&(c.value["x-description-"+n.value]||c.value.description)||""});ae({title:F.value,meta:[{name:"description",content:O.value}],htmlAttrs:{lang:p.value},bodyAttrs:{class:"oapi"}});const A=o(()=>{if(r.value){if(r.value.servers&&r.value.servers[0])return r.value.servers[0].url??null;if(r.value[a.value]&&r.value[a.value].servers&&r.value[a.value].servers[0])return r.value[a.value].servers[0].url??null}if(i.value){if(i.value.servers&&i.value.servers[0])return i.value.servers[0].url??null;if(i.value[a.value]&&i.value[a.value].servers&&i.value[a.value].servers[0])return i.value[a.value].servers[0].url??null}let n=D.value;if(n>0&&s.value.servers&&!s.value.servers[n]&&(n=0),!s.value.servers||!s.value.servers[n])return"";if(s.value.servers[n].variables){const t=Object.values(s.value.servers[n].variables)??[];if(t&&t.length)return t[0].default}return s.value.servers[n].url??""});function L(n){D.value=n}function U(){var t;(((t=document.querySelector(".content-container"))==null?void 0:t.querySelectorAll("h1[id], h2[id], h3[id], h4[id]"))??[]).forEach(l=>{l.addEventListener("click",u=>{const w=l.getAttribute("id"),q=window.location.origin+window.location.pathname+"#"+w;v.copyToClipboard(q,u,!1),T.push({path:y.path,hash:"#"+w}),setTimeout(()=>{l.scrollIntoView({behavior:"smooth",block:"start"})},100)})})}function B(){if(y.hash)return;const n=document.querySelector(".oapi-content");n&&(n.scrollTop=0)}function P(){const n=JSON.stringify(s.value,null,4),t=new Blob([n],{type:"application/json"}),l=URL.createObjectURL(t),u=document.createElement("a");u.href=l,u.download=h.value+".json",document.body.appendChild(u),u.click(),document.body.removeChild(u),URL.revokeObjectURL(l)}return Z(()=>{f.$on("downloadJsonDoc",P),f.$on("changeServer",L),B(),U()}),ee(()=>{f.$off("downloadJsonDoc",P),f.$off("changeServer",L)}),(n,t)=>{const l=W,u=M,w=G,q=V,$=H,E=z,J=K;return m(),te("div",re,[e(N)&&e(s).info?(m(),d(l,{key:0,info:e(s).info,servers:e(s).servers,"current-locale":e(p)},null,8,["info","servers","current-locale"])):e(j)&&e(s).components?(m(),d(u,{key:1,components:e(s).components,"current-locale":e(p)},null,8,["components","current-locale"])):e(k)&&e(s).components?(m(),d(w,{key:2,components:e(s).components,"current-locale":e(p)},null,8,["components","current-locale"])):e(c)?(m(),d(q,{key:3,route:e(c),"current-locale":e(p),method:e(a),components:e(s).components,url:e(b),path_doc:e(_),file:e(h),server:e(A),"sub-params":e(S)},null,8,["route","current-locale","method","components","url","path_doc","file","server","sub-params"])):e(i)?(m(),d(q,{key:4,route:e(i),"current-locale":e(p),method:e(a),components:e(s).components,url:e(b),path_doc:e(_),file:e(h),server:e(A),"sub-params":e(S)},null,8,["route","current-locale","method","components","url","path_doc","file","server","sub-params"])):(m(),d($,{key:5})),R(J,null,{default:ne(()=>[R(E,{"current-locale":e(p),doc:e(s),path:e(_),file:e(h)},null,8,["current-locale","doc","path","file"])]),_:1})])}}});export{ye as default};
