import{_ as J,a as z,b as F,c as Q,d as H,e as M}from"./SearchBlock.28655242.js";import{_ as G}from"./client-only.4440f32e.js";import{f as K,h as X,j as Y,r as P,k as r,g as Z,l as ss,c as es,u as s,m,b as T,w as ns,n as as,o as v}from"./entry.dba88898.js";import{u as ts}from"./vue.f36acd1f.bd032e03.js";import{d as rs}from"./docs.server.config.5f868fc0.js";import"./nuxt-link.5f533b5e.js";import"./OpenApiDropdown.c150524c.js";const l={openapi:"3.0.2",info:{version:"1.0",title:"API Server templating using variables",description:`<p>Various ways to define API servers in the spec including variables</p>
<pre><code class="hljs language-yaml">  <span class="hljs-attr">servers:</span>
    <span class="hljs-bullet">-</span> <span class="hljs-attr">url:</span> <span class="hljs-string">&#x27;http://example.com/api&#x27;</span>
      <span class="hljs-attr">description:</span> <span class="hljs-string">Test</span> <span class="hljs-string">server</span> <span class="hljs-string">(just</span> <span class="hljs-string">for</span> <span class="hljs-string">example)</span>
    <span class="hljs-bullet">-</span> <span class="hljs-attr">url:</span> <span class="hljs-string">&#x27;/api&#x27;</span>
    <span class="hljs-bullet">-</span> <span class="hljs-attr">url:</span> <span class="hljs-string">&#x27;{protocol}://dev.com/api/{version}&#x27;</span>
      <span class="hljs-attr">variables:</span>
        <span class="hljs-attr">protocol:</span>
          <span class="hljs-attr">description:</span> <span class="hljs-string">Protocol</span> <span class="hljs-string">(with</span> <span class="hljs-string">enum)</span>
          <span class="hljs-attr">default:</span> <span class="hljs-string">https</span>
          <span class="hljs-attr">enum:</span>
            <span class="hljs-bullet">-</span> <span class="hljs-string">http</span>
            <span class="hljs-bullet">-</span> <span class="hljs-string">https</span>
        <span class="hljs-attr">version:</span>
          <span class="hljs-attr">description:</span> <span class="hljs-string">API</span> <span class="hljs-string">Version</span> <span class="hljs-string">(without</span> <span class="hljs-string">enum)</span>
          <span class="hljs-attr">default:</span> <span class="hljs-string">v1</span>
    <span class="hljs-bullet">-</span> <span class="hljs-attr">url:</span> <span class="hljs-string">&#x27;{protocol}://{environment}.example.com/{version}&#x27;</span>
      <span class="hljs-attr">variables:</span>
        <span class="hljs-attr">environment:</span>
          <span class="hljs-attr">default:</span> <span class="hljs-string">api</span>    <span class="hljs-comment"># Production server</span>
          <span class="hljs-attr">description:</span> <span class="hljs-string">&gt;
            Server choices:
            * \`api\` Production (this is the default).
            * \`api.qa\` QA server.
            * \`api.dev\` Development server.
</span>          <span class="hljs-attr">enum:</span>
            <span class="hljs-bullet">-</span> <span class="hljs-string">api</span>      <span class="hljs-comment"># Production server</span>
            <span class="hljs-bullet">-</span> <span class="hljs-string">api.dev</span>  <span class="hljs-comment"># Development server</span>
            <span class="hljs-bullet">-</span> <span class="hljs-string">api.qa</span>   <span class="hljs-comment"># Testing server</span>
        <span class="hljs-attr">protocol:</span>
          <span class="hljs-attr">default:</span> <span class="hljs-string">https</span>
          <span class="hljs-attr">enum:</span>
            <span class="hljs-bullet">-</span> <span class="hljs-string">http</span>
            <span class="hljs-bullet">-</span> <span class="hljs-string">https</span>
        <span class="hljs-attr">version:</span>
          <span class="hljs-attr">default:</span> <span class="hljs-string">v2</span>
          <span class="hljs-attr">enum:</span>
            <span class="hljs-bullet">-</span> <span class="hljs-string">v1</span>
            <span class="hljs-bullet">-</span> <span class="hljs-string">v2</span>
</code></pre>
`},servers:[{url:"http://example.com/api",description:"Test server (just for example)"},{url:"{protocol}://dev.com/api/{version}",variables:{protocol:{description:"Protocol (with enum)",default:"https",enum:["http","https"]},version:{description:"API Version (without enum)",default:"v1"}}},{url:"{protocol}://{environment}.example.com/{version}",variables:{environment:{default:"api",description:"Server choices:\n * `api` Production (this is the default).\n * `api.qa` QA server.\n * `api.dev` Development server.\n",enum:["api","api.dev","api.qa"]},protocol:{default:"https",enum:["http","https"]},version:{default:"v2",enum:["v1","v2"]}}}],paths:{"/api-server-template":{get:{summary:"Dynamic API Server.",description:"Uses API server template string and variables which can be used to generatea a desired API server url -  The selected and computed API Server URL should be shown against `API SERVER`.",responses:{200:{description:"successful operation",content:{"application/json":{schema:{type:"object",properties:{name:{description:"Person Name",type:"string"},age:{description:"Person Age",type:"integer"}}}}}}},tags:["other"]}}},tags:{}},ls={class:"content-container"},ds=K({__name:"server",setup(os){const f=X(),$=Y(),{$openapidoc:j,$openapidocBus:_,$openapidocRef:g}=as(),b=P(""),I=P(0),x=P(rs.path.toString()),c=P(l??{}),d=r(()=>"server"),t=r(()=>f.params.type.toString()),C=r(()=>(f.params.mathod??"default").toString()),S=r(()=>t.value==="info"),w=r(()=>t.value==="auth"),k=r(()=>t.value==="components"),h=r(()=>j.currentLocale());g.setComponents(l.components),g.setDefinitions(l.definitions),g.setDocPath(x.value),g.setFile(d.value);const o=r(()=>{const e={...l.paths};if(!e)return null;for(const a in e){let n=a.toString().replace(/[/\\.?+=&{}]/gumi,"_").replace(/__+/,"_");if(n.startsWith("/")&&(n=n.substring(1)),n.endsWith("/")&&(n=n.substring(-1)),n===C.value)return b.value=a.toString(),e[a]??null}return null}),p=r(()=>{const e={...l.webhooks};if(!e)return null;for(const a in e){let n=a.toString().replace(/[/\\.?+=&{}]/gumi,"_").replace(/__+/,"_");if(n.startsWith("/")&&(n=n.substring(1)),n.endsWith("/")&&(n=n.substring(-1)),n===C.value)return b.value=a.toString(),e[a][t.value]??null}return null}),u=r(()=>o.value?o.value[t.value]??null:null),D=r(()=>o.value?o.value.parameters??null:null),q=r(()=>{const e=j.currentLocale()??"";return S.value?"[server] - Info Docs":w.value?"[server] - Authorization":k.value?"[server] - Components Docs":u.value?"[server] - "+(u.value["x-summary-"+e.value]||u.value.summary||""):""}),U=r(()=>{const e=j.currentLocale()??"";return S.value?"[server] - Info Docs":w.value?"[server] - Authorization":k.value?"[server] - Components Docs":u.value&&(u.value["x-description-"+e.value]||u.value.description)||""});ts({title:q.value,meta:[{name:"description",content:U.value}],htmlAttrs:{lang:h.value},bodyAttrs:{class:"oapi"}});const R=r(()=>{if(o.value){if(o.value.servers&&o.value.servers[0])return o.value.servers[0].url??null;if(o.value[t.value]&&o.value[t.value].servers&&o.value[t.value].servers[0])return o.value[t.value].servers[0].url??null}if(p.value){if(p.value.servers&&p.value.servers[0])return p.value.servers[0].url??null;if(p.value[t.value]&&p.value[t.value].servers&&p.value[t.value].servers[0])return p.value[t.value].servers[0].url??null}let e=I.value;if(e>0&&l.servers&&!l.servers[e]&&(e=0),!l.servers||!l.servers[e])return"";if(l.servers[e].variables){const a=Object.values(l.servers[e].variables)??[];if(a&&a.length)return a[0].default}return l.servers[e].url??""});function L(e){I.value=e}function B(){var a;(((a=document.querySelector(".content-container"))==null?void 0:a.querySelectorAll("h1[id], h2[id], h3[id], h4[id]"))??[]).forEach(n=>{n.addEventListener("click",i=>{const y=n.getAttribute("id"),A=window.location.origin+window.location.pathname+"#"+y;j.copyToClipboard(A,i,!1),$.push({path:f.path,hash:"#"+y}),setTimeout(()=>{n.scrollIntoView({behavior:"smooth",block:"start"})},100)})})}function E(){if(f.hash)return;const e=document.querySelector(".oapi-content");e&&(e.scrollTop=0)}function O(){const e=JSON.stringify(l,null,4),a=new Blob([e],{type:"application/json"}),n=URL.createObjectURL(a),i=document.createElement("a");i.href=n,i.download=d.value+".json",document.body.appendChild(i),i.click(),document.body.removeChild(i),URL.revokeObjectURL(n)}return Z(()=>{_.$on("downloadJsonDoc",O),_.$on("changeServer",L),E(),B()}),ss(()=>{_.$off("downloadJsonDoc",O),_.$off("changeServer",L)}),(e,a)=>{const n=J,i=z,y=F,A=Q,N=M,V=H,W=G;return v(),es("div",ls,[s(S)&&s(c).info?(v(),m(n,{key:0,info:s(c).info,servers:s(c).servers,"current-locale":s(h)},null,8,["info","servers","current-locale"])):s(w)&&s(c).components?(v(),m(i,{key:1,components:s(c).components,"current-locale":s(h)},null,8,["components","current-locale"])):s(k)&&s(c).components?(v(),m(y,{key:2,components:s(c).components,"current-locale":s(h)},null,8,["components","current-locale"])):s(u)?(v(),m(A,{key:3,route:s(u),"current-locale":s(h),method:s(t),components:s(c).components,url:s(b),path_doc:s(x),file:s(d),server:s(R),"sub-params":s(D)},null,8,["route","current-locale","method","components","url","path_doc","file","server","sub-params"])):s(p)?(v(),m(A,{key:4,route:s(p),"current-locale":s(h),method:s(t),components:s(c).components,url:s(b),path_doc:s(x),file:s(d),server:s(R),"sub-params":s(D)},null,8,["route","current-locale","method","components","url","path_doc","file","server","sub-params"])):(v(),m(N,{key:5})),T(W,null,{default:ns(()=>[T(V,{"current-locale":s(h),doc:s(c),path:s(x),file:s(d)},null,8,["current-locale","doc","path","file"])]),_:1})])}}});export{ds as default};
