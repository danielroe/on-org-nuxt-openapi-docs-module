import{_ as T,a as V,b as z,c as K,d as H,e as M}from"./SearchBlock.1e4291ad.js";import{_ as G}from"./client-only.bc1de542.js";import{f as Q,h as X,j as Y,r as S,k as l,g as Z,l as ss,c as ns,u as s,m as d,b as D,w as as,n as es,o as h}from"./entry.02ff2795.js";import{u as ts}from"./vue.f36acd1f.eda93068.js";import{d as ls}from"./docs.file-upload.config.c43dcd79.js";import"./nuxt-link.162a37af.js";import"./OpenApiDropdown.42b99cd0.js";const r={openapi:"3.0.0",info:{title:"Various ways to upload files (binary content)",version:"1.0.0"},paths:{"/upload-single-file":{post:{tags:["File Upload"],summary:"Uploads single file using form-data",description:`<pre><code class="hljs language-yaml"><span class="hljs-string">/upload-single-file:</span>
  <span class="hljs-attr">post:</span>
    <span class="hljs-attr">summary:</span> <span class="hljs-string">Uploads</span> <span class="hljs-string">single</span> <span class="hljs-string">file</span> <span class="hljs-string">using</span> <span class="hljs-string">form-data</span>
    <span class="hljs-attr">requestBody:</span>
      <span class="hljs-attr">content:</span>
        <span class="hljs-attr">multipart/form-data:</span>
          <span class="hljs-attr">schema:</span>
            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span>
            <span class="hljs-attr">properties:</span>
              <span class="hljs-attr">filename:</span>
                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span>
                <span class="hljs-attr">format:</span> <span class="hljs-string">binary</span>      
</code></pre>
`,requestBody:{content:{"multipart/form-data":{schema:{type:"object",properties:{name:{type:"string"},photo:{type:"string",format:"binary"}}}}}},responses:{200:{summary:"OK"}}}},"/upload-multiple-file":{post:{tags:["File Upload"],summary:"Uploads multiple file using form-data and type as &#x27;array&#x27;",description:`<pre><code class="hljs language-yaml"><span class="hljs-string">/upload-multiple-file:</span>
  <span class="hljs-attr">post:</span>
    <span class="hljs-attr">summary:</span> <span class="hljs-string">Uploads</span> <span class="hljs-string">multiple</span> <span class="hljs-string">file</span> <span class="hljs-string">using</span> <span class="hljs-string">form-data</span> <span class="hljs-string">and</span> <span class="hljs-string">type</span> <span class="hljs-string">as</span> <span class="hljs-string">&#x27;array&#x27;</span>
    <span class="hljs-attr">requestBody:</span>
      <span class="hljs-attr">content:</span>
        <span class="hljs-attr">multipart/form-data:</span>
          <span class="hljs-attr">schema:</span>
            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span>
            <span class="hljs-attr">properties:</span>
              <span class="hljs-attr">filename:</span>
                <span class="hljs-attr">type:</span> <span class="hljs-string">array</span>
                <span class="hljs-attr">items:</span>
                  <span class="hljs-attr">type:</span> <span class="hljs-string">string</span>
                  <span class="hljs-attr">format:</span> <span class="hljs-string">binary</span>      
</code></pre>
`,requestBody:{content:{"multipart/form-data":{schema:{type:"object",properties:{name:{type:"string"},picture:{type:"array",items:{type:"string",format:"binary"}}}}}}},responses:{200:{description:"OK"}}}},"/upload-using-request-body":{post:{tags:["File Upload"],summary:"Uploads single file using request-body content-type as application/octet-stream",description:`<pre><code class="hljs language-yaml"><span class="hljs-string">/upload-using-request-body:</span>
  <span class="hljs-attr">post:</span>
    <span class="hljs-attr">summary:</span> <span class="hljs-string">Uploads</span> <span class="hljs-string">single</span> <span class="hljs-string">file</span> <span class="hljs-string">using</span> <span class="hljs-string">request-body</span> <span class="hljs-string">content-type</span> <span class="hljs-string">as</span> <span class="hljs-string">application/octet-stream</span>
    <span class="hljs-attr">requestBody:</span>
      <span class="hljs-attr">content:</span>
        <span class="hljs-attr">application/octet-stream:</span>
          <span class="hljs-attr">schema:</span>
            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span>
            <span class="hljs-attr">format:</span> <span class="hljs-string">binary</span>
</code></pre>
`,requestBody:{content:{"application/octet-stream":{schema:{type:"string",format:"binary"}}}},responses:{200:{description:"successful operation"}}}}},tags:{}},rs={class:"content-container"},fs=Q({__name:"file-upload",setup(os){const v=X(),P=Y(),{$openapidoc:g,$openapidocBus:j,$openapidocRef:_}=es(),y=S(""),A=S(0),b=S(ls.path.toString()),p=S(r??{}),f=l(()=>"file-upload"),t=l(()=>v.params.type.toString()),B=l(()=>(v.params.mathod??"default").toString()),w=l(()=>t.value==="info"),U=l(()=>t.value==="auth"),q=l(()=>t.value==="components"),m=l(()=>g.currentLocale());_.setComponents(r.components),_.setDefinitions(r.definitions),_.setDocPath(b.value),_.setFile(f.value);const o=l(()=>{const n={...r.paths};if(!n)return null;for(const e in n){let a=e.toString();if(a.startsWith("/")&&(a=a.substring(1)),a.endsWith("/")&&(a=a.substring(-1)),a.replace(/[/\\.?+=&{}]/gumi,"_").replace(/__+/,"_"),a===B.value)return y.value=e.toString(),n[e]??null}return null}),c=l(()=>{const n={...r.webhooks};if(!n)return null;for(const e in n){let a=e.toString();if(a.startsWith("/")&&(a=a.substring(1)),a.endsWith("/")&&(a=a.substring(-1)),a.replace(/[/\\.?+=&{}]/gumi,"_").replace(/__+/,"_"),a===B.value)return y.value=e.toString(),n[e][t.value]??null}return null}),u=l(()=>o.value?o.value[t.value]??null:null),C=l(()=>o.value?o.value.parameters??null:null),$=l(()=>{const n=g.currentLocale()??"";return w.value?"[file-upload] - Info Docs":U.value?"[file-upload] - Authorization":q.value?"[file-upload] - Components Docs":u.value?"[file-upload] - "+(u.value["x-summary-"+n.value]||u.value.summary||""):""}),I=l(()=>{const n=g.currentLocale()??"";return w.value?"[file-upload] - Info Docs":U.value?"[file-upload] - Authorization":q.value?"[file-upload] - Components Docs":u.value&&(u.value["x-description-"+n.value]||u.value.description)||""});ts({title:$.value,meta:[{name:"description",content:I.value}],htmlAttrs:{lang:m.value},bodyAttrs:{class:"oapi"}});const O=l(()=>{if(o.value){if(o.value.servers&&o.value.servers[0])return o.value.servers[0].url??null;if(o.value[t.value]&&o.value[t.value].servers&&o.value[t.value].servers[0])return o.value[t.value].servers[0].url??null}if(c.value){if(c.value.servers&&c.value.servers[0])return c.value.servers[0].url??null;if(c.value[t.value]&&c.value[t.value].servers&&c.value[t.value].servers[0])return c.value[t.value].servers[0].url??null}let n=A.value;if(n>0&&r.servers&&!r.servers[n]&&(n=0),!r.servers||!r.servers[n])return"";if(r.servers[n].variables){const e=Object.values(r.servers[n].variables)??[];if(e&&e.length)return e[0].default}return r.servers[n].url??""});function L(n){A.value=n}function F(){var e;(((e=document.querySelector(".content-container"))==null?void 0:e.querySelectorAll("h1[id], h2[id], h3[id], h4[id]"))??[]).forEach(a=>{a.addEventListener("click",i=>{const k=a.getAttribute("id"),x=window.location.origin+window.location.pathname+"#"+k;g.copyToClipboard(x,i,!1),P.push({path:v.path,hash:"#"+k}),setTimeout(()=>{a.scrollIntoView({behavior:"smooth",block:"start"})},100)})})}function N(){if(v.hash)return;const n=document.querySelector(".oapi-content");n&&(n.scrollTop=0)}function R(){const n=JSON.stringify(r,null,4),e=new Blob([n],{type:"application/json"}),a=URL.createObjectURL(e),i=document.createElement("a");i.href=a,i.download=f.value+".json",document.body.appendChild(i),i.click(),document.body.removeChild(i),URL.revokeObjectURL(a)}return Z(()=>{j.$on("downloadJsonDoc",R),j.$on("changeServer",L),N(),F()}),ss(()=>{j.$off("downloadJsonDoc",R),j.$off("changeServer",L)}),(n,e)=>{const a=T,i=V,k=z,x=K,W=M,E=H,J=G;return h(),ns("div",rs,[s(w)&&s(p).info?(h(),d(a,{key:0,info:s(p).info,servers:s(p).servers,"current-locale":s(m)},null,8,["info","servers","current-locale"])):s(U)&&s(p).components?(h(),d(i,{key:1,components:s(p).components,"current-locale":s(m)},null,8,["components","current-locale"])):s(q)&&s(p).components?(h(),d(k,{key:2,components:s(p).components,"current-locale":s(m)},null,8,["components","current-locale"])):s(u)?(h(),d(x,{key:3,route:s(u),"current-locale":s(m),method:s(t),components:s(p).components,url:s(y),path_doc:s(b),file:s(f),server:s(O),"sub-params":s(C)},null,8,["route","current-locale","method","components","url","path_doc","file","server","sub-params"])):s(c)?(h(),d(x,{key:4,route:s(c),"current-locale":s(m),method:s(t),components:s(p).components,url:s(y),path_doc:s(b),file:s(f),server:s(O),"sub-params":s(C)},null,8,["route","current-locale","method","components","url","path_doc","file","server","sub-params"])):(h(),d(W,{key:5})),D(J,null,{default:as(()=>[D(E,{"current-locale":s(m),doc:s(p),path:s(b),file:s(f)},null,8,["current-locale","doc","path","file"])]),_:1})])}}});export{fs as default};
